syntax = "proto3";

option java_package = "ai.starwhale.mlops.datastore";

message ColumnSchema {
  string column_name = 1;
  string column_type = 2;
  // column_index is used for the index of the column in table schema
  // and as index of the item when the parent column is a list or tuple.
  int32 column_index = 3;
  string python_type = 4;
  ColumnSchema element_type = 5;
  repeated ColumnSchema attributes = 6;
  ColumnSchema key_type = 7;
  ColumnSchema value_type = 8;
  message KeyValuePair {
    ColumnSchema key = 1;
    ColumnSchema value = 2;
  }
  map<int32, KeyValuePair> sparse_key_value_types = 9;
}

message TableSchema {
  string key_column = 1;
  repeated ColumnSchema columns = 2;
}

message Column {
  int32 index = 1;
  bool null_value = 2;
  bool bool_value = 3;
  int64 int_value = 4;
  float float_value = 5;
  double double_value = 6;
  string string_value = 7;
  bytes bytes_value = 8;
  repeated Column list_value = 9;
  map<string, Column> object_value = 10;
  message MapEntry {
    Column key = 1;
    Column value = 2;
  }
  repeated MapEntry map_value = 11;
  int32 type = 99;
}

message Record {
  repeated Column columns = 1;
}

message Checkpoint {
  enum OP {
    CREATE = 0;
    // if the op is DELETE, only the revision field is valid.
    DELETE = 1;
  }
  OP op = 1;
  int64 revision = 2;
  oneof optional_user_data {
    string user_data = 3;
  }
  int64 timestamp = 4;
  int64 row_count = 5;
}

message Tombstone {
  message Range {
    Column start_key = 1;
    Column end_key = 2;
    bool start_inclusive = 3;
    bool end_inclusive = 4;
  }
  message Prefix {
    string key_prefix = 1;
  }
  int64 revision = 1;
  oneof optional_range_or_prefix {
    Range range = 2;
    Prefix prefix = 3;
  }
}

message WalEntry {
  enum Type {
    UPDATE = 0;
    // if the entry is a checkpoint, only the id, table_name and checkpoint fields are valid.
    CHECKPOINT = 1;
    TOMBSTONE = 2;
  }
  Type entry_type = 1;
  string table_name = 2;
  TableSchema table_schema = 3;
  repeated Record records = 4;
  int64 id = 5;
  int64 revision = 6;
  oneof payload {
    Checkpoint checkpoint = 7;
    Tombstone tombstone = 8;
  }
}
