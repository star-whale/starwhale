apiVersion: batch/v1
kind: Job
metadata:
  name: 'build-job'
spec:
  completions: 1
  parallelism: 1
  completionMode: Indexed
  backoffLimit: 2
  ttlSecondsAfterFinished: 10
  template:
    metadata:
      labels:
        owner: starwhale
    spec:
      restartPolicy: OnFailure
      initContainers:
        - name: 'prepare-runtime'
          imagePullPolicy: IfNotPresent
          image: 'ghcr.io/star-whale/starwhale:latest'
          volumeMounts:
            - mountPath: /opt/starwhale.user/runtime
              name: data
          command:
            - sh
            - -c
            - >-
              set -x;
              /opt/starwhale.bin/starwhale-entrypoint set_environment;
              swcli instance login --token="$SW_TOKEN" --alias server $SW_INSTANCE_URI;
              swcli runtime copy cloud://server/project/$SW_PROJECT/runtime/$SW_RUNTIME_VERSION .;
              swcli runtime extract --target-dir /tmp/extract/ $SW_RUNTIME_VERSION;
              cp -r /tmp/extract/** /opt/starwhale.user/runtime;
              swcli runtime dockerize -t sw-build --dry-run $SW_RUNTIME_VERSION;
              _SNAPSHOT_DIR=$(swcli -o json runtime info ${SW_RUNTIME_VERSION} | jq -r ".basic.snapshot_workdir");
              cp $_SNAPSHOT_DIR/export/docker/Dockerfile /opt/starwhale.user/runtime || exit 1;
      containers:
        - name: 'build-image'
          image: 'gcr.io/kaniko-project/executor:latest'
          args: [ "--dockerfile=Dockerfile",
                  "--context=dir:///workspace"] # --destination=${registry-host}/test:${tag} replace with your dockerhub account
          volumeMounts:
            - name: kaniko-secret
              mountPath: /kaniko/.docker
            - name: data
              mountPath: /workspace # should be workspace otherwise some layer would lose
      volumes:
        - name: kaniko-secret
          secret:
            secretName: regcred
            items:
              - key: .dockerconfigjson
                path: config.json
        - name: data
          emptyDir: { }
