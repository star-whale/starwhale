<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2022.1-2022
  ~ starwhale.ai All right reserved. This software is the confidential and proprietary information of
  ~ starwhale.ai ("Confidential Information"). You shall not disclose such Confidential Information and shall use it only
  ~ in accordance with the terms of the license agreement you entered into with starwhale.ai.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ai.starwhale.mlops.domain.dataset.mapper.DatasetMapper">
  <sql id="select_dataset">
    select s.id as dataset_id,
    s.dataset_name,
    s.project_id,
    s.owner_id,
    s.is_deleted,
    s.created_time as dataset_created_time,
    s.modified_time as dataset_modified_time,
    u.id as user_id,
    u.user_name,
    u.created_time as user_created_time,
    u.user_enabled
    from dataset_info as s,
    user_info as u
    where s.is_deleted = 0
    and u.id = s.owner_id
  </sql>

  <select id="listDatasets" resultMap="datasetResultMap">
    <include refid="select_dataset"/>
    and project_id = #{projectId}
    <if test="namePrefix != null and namePrefix != ''">
      and s.dataset_name like concat(#{namePrefix}, '%')
    </if>
    order by s.id desc
  </select>

  <select id="findDatasetById" resultMap="datasetResultMap">
    <include refid="select_dataset"/>
    and s.id = #{id}
  </select>

  <select id="findDatasetsByIds" resultMap="datasetResultMap">
    <include refid="select_dataset"/>
    and s.id in
    <foreach collection="ids" separator="," open="(" close=")" item="id">
      #{id}
    </foreach>
  </select>

  <select id="findByNameForUpdate" resultMap="datasetResultMap">
    <include refid="select_dataset"/>
    and s.dataset_name = #{name}
    <if test="projectId != null">
      and s.project_id = #{projectId}
    </if>
    for update
  </select>

  <select id="findByName" resultMap="datasetResultMap">
    <include refid="select_dataset"/>
    and s.dataset_name = #{name}
    <if test="projectId != null">
      and s.project_id = #{projectId}
    </if>
  </select>

  <insert id="addDataset" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into dataset_info(dataset_name, project_id, owner_id)
    values(#{dataset.datasetName}, #{dataset.projectId}, #{dataset.ownerId})
  </insert>

  <delete id="deleteDataset">
    update dataset_info
    set is_deleted = 1
    where id = #{id}
  </delete>

  <update id="recoverDataset">
    update dataset_info
    set is_deleted = 0
    where id = #{id}
  </update>

  <select id="findDeletedDatasetById" resultMap="datasetResultMap">
    select id as dataset_id,
    dataset_name,
    project_id,
    owner_id,
    is_deleted,
    created_time as runtime_created_time,
    modified_time as runtime_modified_time
    from dataset_info
    where is_deleted = 1
    and id = #{id}
  </select>

  <select id="listDeletedDatasets" resultMap="datasetResultMap">
    select id as dataset_id,
    dataset_name,
    project_id,
    owner_id,
    is_deleted,
    created_time as runtime_created_time,
    modified_time as runtime_modified_time
    from dataset_info
    where is_deleted = 1
    <if test="name != null and name != ''">
      and dataset_name = #{name}
    </if>
    <if test="projectId != null">
      and project_id = #{projectId}
    </if>
    order by modified_time desc
  </select>

  <resultMap id="datasetResultMap" type="ai.starwhale.mlops.domain.dataset.po.DatasetEntity">
    <id property="id" column="dataset_id"/>
    <result property="datasetName" column="dataset_name"/>
    <result property="projectId" column="project_id"/>
    <result property="ownerId" column="owner_id"/>
    <result property="isDeleted" column="is_deleted"/>
    <result property="createdTime" column="dataset_created_time"/>
    <result property="modifiedTime" column="dataset_modified_time"/>
    <association property="owner"
      resultMap="ai.starwhale.mlops.domain.user.mapper.UserMapper.userResultMap"/>
  </resultMap>
</mapper>
