<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2022.1-2022
  ~ StarWhale.ai All right reserved. This software is the confidential and proprietary information of
  ~ StarWhale.ai ("Confidential Information"). You shall not disclose such Confidential Information and shall use it only
  ~ in accordance with the terms of the license agreement you entered into with StarWhale.ai.
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ai.starwhale.mlops.domain.swmp.SWModelPackageVersionMapper">
    <sql id="select_swmp_version">
        select mv.id as mv_id,
               mv.swmp_id,
               mv.owner_id,
               mv.version_name as mv_version_name,
               mv.version_tag as mv_version_tag,
               mv.version_meta as mv_version_meta,
               mv.storage_path as mv_storage_path,
               mv.created_time as mv_created_time,
               mv.modified_time as mv_modified_time,
               u.id as user_id,
               u.user_name,
               u.created_time as user_created_time,
               u.user_enabled,
               r.id as role_id,
               r.role_name,
               r.role_name_en
        from swmp_version as mv,
             user_info as u,
             user_role as r
        where owner_id = u.id
          and r.id = u.role_id
    </sql>
    <select id="listVersions" resultMap="swmpVersionResultMap" >
        <include refid="select_swmp_version" />
        and swmp_id = #{swmpId}
        <if test="namePrefix != null and namePrefix != ''">
            and version_name like concat(#{namePrefix}, '%')
        </if>
        order by mv.id desc
    </select>

    <select id="getLatestVersion" resultMap="swmpVersionResultMap" >
        <include refid="select_swmp_version" />
        and swmp_id = #{swmpId}
        order by mv.id desc
        limit 1
    </select>

    <insert id="revertTo">
        insert into swmp_version (swmp_id, owner_id, version_name, version_tag, version_meta, storage_path)
        select swmp_id, owner_id, version_name, version_tag, version_meta, storage_path
        from swmp_version
        where id = #{swmpVersionId}
    </insert>

    <insert id="addNewVersion" parameterType="ai.starwhale.mlops.domain.swmp.SWModelPackageVersionEntity" useGeneratedKeys="true" keyProperty="id">
        insert into swmp_version (swmp_id, owner_id, version_name, version_tag, version_meta, storage_path)
        values(#{swmpId}, #{ownerId}, #{versionName}, #{versionTag}, #{versionMeta}, #{storagePath})
    </insert>

    <update id="update" parameterType="ai.starwhale.mlops.domain.swmp.SWModelPackageVersionEntity">
        update swmp_version set version_tag = #{versionTag} where id = #{id}
    </update>

    <resultMap id="swmpVersionResultMap" type="ai.starwhale.mlops.domain.swmp.SWModelPackageVersionEntity" >
        <id property="id" column="mv_id" />
        <result property="swmpId" column="swmp_id" />
        <result property="versionName" column="mv_version_name" />
        <result property="versionTag" column="mv_version_tag" />
        <result property="versionMeta" column="mv_version_meta" />
        <result property="storagePath" column="mv_storage_path" />
        <result property="createdTime" column="mv_created_time"/>
        <result property="modifiedTime" column="mv_modified_time"/>
        <result property="ownerId" column="owner_id" />
        <association property="owner" resultMap="ai.starwhale.mlops.domain.user.UserMapper.userResultMap" />
    </resultMap>
</mapper>