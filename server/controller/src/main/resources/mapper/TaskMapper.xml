<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2022.1-2022
  ~ StarWhale.ai All right reserved. This software is the confidential and proprietary information of
  ~ StarWhale.ai ("Confidential Information"). You shall not disclose such Confidential Information and shall use it only
  ~ in accordance with the terms of the license agreement you entered into with StarWhale.ai.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ai.starwhale.mlops.domain.task.mapper.TaskMapper">
    <sql id="select_task">
        select t.id as task_id,
               t.task_uuid,
               t.job_id,
               t.agent_id,
               t.task_status,
               t.task_type,
               t.result_path as task_result_path,
               t.task_request as task_task_request,
               t.created_time as task_created_time,
               t.modified_time as task_modified_time,
               a.id as agent_id,
               inet_ntoa(a.agent_ip) as agent_ip,
               a.agent_version,
               a.connect_time,
               a.created_time as agent_created_time,
               a.modified_time as agent_modified_time
        from task_info as t
        left join
            agent_info as a
        on t.agent_id = a.id
        where 1=1
    </sql>
    <select id="listTasks" resultMap="taskResultMap">
        <include refid="select_task" />
        and t.job_id = #{jobId}
        order by t.id desc
    </select>

    <select id="findTaskById" resultMap="taskResultMap" >
        <include refid="select_task"/>
        and t.id = #{taskId}
    </select>

    <insert id="addTask" parameterType="ai.starwhale.mlops.domain.task.TaskEntity" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into task_info(task_uuid, job_id, agent_id, task_status, task_type,result_path, task_request)
        values(#{taskUuid}, #{jobId}, #{agentId}, #{taskStatus}, #{taskType}, #{resultPath}, #{taskRequest})
    </insert>

    <insert id="addAll" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO task_info(task_uuid, job_id, agent_id, task_status, task_type, result_path, task_request)
        VALUES
        <foreach collection="taskList" item="task" index="index" open="(" separator="),("  close=")">
            #{task.taskUuid},
            #{task.jobId},
            #{task.agentId},
            #{task.taskStatus},
            #{task.taskType},
            #{task.resultPath},
            #{task.taskRequest}
        </foreach>
    </insert>

    <update id="updateTaskStatus">
        update task_info set task_status = #{taskStatus} WHERE id in
        <foreach item="item" index="index" collection="ids"
          open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updateTaskAgent">
        update task_info set agent_id = #{agentId} WHERE id in
        <foreach item="item" index="index" collection="ids"
          open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="findTaskByStatus" resultMap="taskResultMap" >
        <include refid="select_task"/>
        and t.task_status = #{taskStatus}
    </select>

    <select id="findTaskByStatusIn" resultMap="taskResultMap" >
        <include refid="select_task"/>
        and t.task_status in
        <foreach item="item" index="index" collection="taskStatusList"
          open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <resultMap id="taskResultMap" type="ai.starwhale.mlops.domain.task.TaskEntity" >
        <id property="id" column="task_id" />
        <result property="taskUuid" column="task_uuid" />
        <result property="jobId" column="job_id" />
        <result property="agentId" column="agent_id" />
        <result property="taskStatus" column="task_status" />
        <result property="taskType" column="task_type" />
        <result property="resultPath" column="task_result_path" />
        <result property="taskRequest" column="task_task_request" />
        <result property="createdTime" column="task_created_time" />
        <result property="modifiedTime" column="task_modified_time" />
        <association property="agent" resultMap="ai.starwhale.mlops.domain.system.mapper.AgentMapper.agentResultMap" />
    </resultMap>
</mapper>
