spring:
  profiles:
    active: dev
  application:
    name: star-whale-controller
  servlet:
    multipart:
      max-file-size: ${SW_UPLOAD_MAX_FILE_SIZE:20480MB}
      max-request-size: ${SW_UPLOAD_MAX_FILE_SIZE:20480MB}
  web:
    resources:
      static-locations: file:/opt/starwhale.java/static/, classpath:/static/
sw:
  version: ${SW_VERSION_CONTROLLER:0.1.0:8c82767b60686f3e2bfea9dafe8c8cce5dd34f52}
  public-api:
    base-url: ${SW_PUBLIC_API_BASE_URL:}
    latest-version: ${SW_LATEST_VERSION_URL:${sw.public-api.base-url}/version/latest}
  docker:
    registry: ${SW_DOCKER_REGISTRY_URL:}
  runtime:
    image-build:
      resource-pool: ${SW_IMAGE_BUILD_RESOURCE_POOL:default}
      image: ${SW_IMAGE_BUILD_IMAGE:gcr.io/kaniko-project/executor:latest}
    pypi:
      index-url: ${SW_PYPI_INDEX_URL:}
      extra-index-url: ${SW_PYPI_EXTRA_INDEX_URL:}
      trusted-host: ${SW_PYPI_TRUSTED_HOST:}
  jwt:
    secret: ${SW_JWT_SECRET:wdxlG3UK66m6uTUgxXFjizli}
    issuer: ${SW_JWT_ISSUER:starwhale}
    expire-minutes: ${SW_JWT_TOKEN_EXPIRE_MINUTES:43200}
  dataset:
    load:
      batch-size: ${DATASET_CONSUMPTION_BATCH_SIZE:50}
  task:
    deletion-delay-minutes: ${SW_TASK_DELETION_DELAY_MINUTES:30}
  online-eval:
    max-time-to-live-in-seconds: ${SW_ONLINE_EVAL_MAX_TTL_SECS:43200} # 12h
    min-time-to-live-in-seconds: ${SW_ONLINE_EVAL_MIN_TTL_SECS:1800} # 30min
  instance-uri: ${SW_INSTANCE_URI:http://console.pre.intra.starwhale.ai}
  infra:
    k8s:
      name-space: ${SW_K8S_NAME_SPACE:default}
      host-path-for-cache: ${SW_K8S_HOST_PATH_FOR_CACHE:}
      model-serving-template-path: ${SW_K8S_MODEL_SERVING_TEMPLATE_PATH:}
      image-build-job:
        template-path: ${SW_K8S_IMAGE_BUILD_TEMPLATE_PATH:}
      event-holder-ttl-in-seconds: ${SW_K8S_EVENT_HOLDER_TTL_IN_SECS:43200} # 12h
      job:
        template-path: ${SW_K8S_JOB_TEMPLATE_PATH:}
        restart-policy: ${SW_K8S_JOB_RESTART_POLICY:Never}
        backoff-limit: ${SW_K8S_JOB_BACKOFF_LIMIT:10}
  storage:
    type: ${SW_STORAGE_TYPE:minio}
    path-prefix: ${SW_STORAGE_PREFIX:starwhale}
    fs-config:
      root-dir: ${SW_STORAGE_FS_ROOT_DIR:/usr/local/starwhale}
      service-provider: ${SW_INSTANCE_URI}/obj-store
    s3-config:
      bucket: ${SW_STORAGE_BUCKET:starwhale}
      access-key: ${SW_STORAGE_ACCESSKEY:starwhale}
      secret-key: ${SW_STORAGE_SECRETKEY:starwhale}
      region: ${SW_STORAGE_REGION:local}
      endpoint: ${SW_STORAGE_ENDPOINT:http://localhost:9000}
      huge-file-threshold: 10485760 # 10MB
      huge-file-part-size: 5242880 # 5MB
  controller:
    api-prefix: /api/v1
    white-list: /api/v1/report
  datastore:
    wal-file-size: ${SW_DATASTORE_WAL_FILE_SIZE:65536}
    wal-max-file-size: ${SW_DATASTORE_WAL_MAX_FILE_SIZE:67108864}
    oss-max-attempts: ${SW_DATASTORE_WAL_INIT_MAX_ATTEMPTS:3}
    data-root-path: ${SW_DATASTORE_DATA_ROOT_PATH:}
    dump-interval: ${SW_DATASTORE_DUMP_INTERVAL:1h}
    min-no-update-period: ${SW_DATASTORE_MIN_NO_UPDATE_PERIOD:1d}
    parquet:
      compression-codec: ${SW_DATASTORE_PARQUET_COMPRESSION_CODEC:SNAPPY}
      row-group-size: ${SW_DATASTORE_PARQUET_ROW_GROUP_SIZE:128MB}
      page-size: ${SW_DATASTORE_PARQUET_PAGE_SIZE:1MB}
      page-row-count-limit: ${SW_DATASTORE_PARQUET_PAGE_ROW_COUNT_LIMIT:20000}
---
#Development
spring:
  boot:
    admin:
      context-path: monitor
      instance-auth:
        default-user-name: ${spring.security.user.name}
        default-password: ${spring.security.user.password}
      server:
        enabled: ${SW_ADMIN_ENABLED:true}
      discovery:
        enabled: ${SW_ADMIN_ENABLED:true}
      client:
        url: http://localhost:${server.port}/${spring.boot.admin.context-path}
        username: ${spring.security.user.name}
        password: ${spring.security.user.password}
        instance:
          metadata:
            user:
              name: ${spring.security.user.name}
              password: ${spring.security.user.password}
          name: StarWhale-Server
        enabled: ${SW_ADMIN_ENABLED:true}
  config:
    activate:
      on-profile: dev
  datasource:
    name: mysql
    driver-class-name: com.mysql.cj.jdbc.Driver
    # timezone setting: https://jira.mariadb.org/browse/CONJ-433
    url: jdbc:mysql://${SW_METADATA_STORAGE_IP:127.0.0.1}:${SW_METADATA_STORAGE_PORT:3306}/${SW_METADATA_STORAGE_DB:starwhale}?useUnicode=true&characterEncoding=UTF-8&createDatabaseIfNotExist=true&allowMultiQueries=true&serverTimezone=UTC&useLegacyDatetimeCode=false&sessionVariables=time_zone='%2B00:00'
    username: ${SW_METADATA_STORAGE_USER:starwhale}
    password: ${SW_METADATA_STORAGE_PASSWORD:starwhale}
  flyway:
    locations: "classpath:db/migration"
    ignore-missing-migrations: true
    out-of-order: true
  mvc:
    view:
      suffix: .html
  security:
    user:
      name: starwhaleAdmin
      password: starwhale123

mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath*:mapper/**/*.xml

server:
  port: ${SW_CONTROLLER_PORT:8082}
  shutdown: graceful
logging:
  level:
    root: ${SW_ROOT_LOG_LEVEL:warn}
    ai.starwhale.mlops: ${SW_BIZ_LOG_LEVEL:warn}
    org.springframework.web.filter.CommonsRequestLoggingFilter: ${SW_REQUEST_LOG_LEVEL:info}

management:
  endpoints:
    web:
      exposure:
        include: ${SW_BIZ_MANAGMENT_EXPOSURE_ENDPOINTS:httptrace,loggers,health,info,metrics}
