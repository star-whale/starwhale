spring:
  profiles:
    active: dev
  application:
    name: star-whale-controller
  servlet:
    multipart:
      max-file-size: ${SW_UPLOAD_MAX_FILE_SIZE:20480MB}
      max-request-size: ${SW_UPLOAD_MAX_FILE_SIZE:20480MB}
  web:
    resources:
      static-locations: file:/opt/starwhale.java/static/, classpath:/static/
sw:
  version: ${SW_VERSION_CONTROLLER:0.1.0:8c82767b60686f3e2bfea9dafe8c8cce5dd34f52}
  db:
    sql:
      log-slow-sql:
        enable: ${SW_DB_SQL_LOG_SLOW_SQL_ENABLE:true}
      slow-sql-millis: ${SW_DB_SQL_LOG_SLOW_SQL_MILLIS:100}
      max-print-length: ${SW_DB_SQL_LOG_SLOW_SQL_MAX_PRINT_LENGTH:200}
  features:
    disabled: ${SW_DISABLED_FEATURES:}
  public-api:
    base-url: ${SW_PUBLIC_API_BASE_URL:}
    latest-version: ${SW_LATEST_VERSION_URL:${sw.public-api.base-url}/version/latest}
  docker:
    registry: ${SW_DOCKER_REGISTRY_URL:}
  runtime:
    image-build:
      resource-pool: ${SW_IMAGE_BUILD_RESOURCE_POOL:default}
      image: ${SW_IMAGE_BUILD_IMAGE:gcr.io/kaniko-project/executor:latest}
    dataset-build:
      resource-pool: ${SW_DATASET_BUILD_RESOURCE_POOL:default}
      image: ${SW_DATASET_BUILD_IMAGE:docker-registry.starwhale.cn/star-whale/dataset_builder:latest}
      client-version: ${SW_DATASET_BUILD_CLI_VERSION:0.5.6}
      python-version: ${SW_DATASET_BUILD_PYTHON_VERSION:3.10}
    pypi:
      index-url: ${SW_PYPI_INDEX_URL:}
      extra-index-url: ${SW_PYPI_EXTRA_INDEX_URL:}
      trusted-host: ${SW_PYPI_TRUSTED_HOST:}
      retries: ${SW_PYPI_RETRIES:10}
      timeout: ${SW_PYPI_TIMEOUT:90}
    condarc: ${SW_CONDA_CONFIG:}
  jwt:
    secret: ${SW_JWT_SECRET:wdxlG3UK66m6uTUgxXFjizli}
    issuer: ${SW_JWT_ISSUER:starwhale}
    expire-minutes: ${SW_JWT_TOKEN_EXPIRE_MINUTES:43200}
  dataset:
    build:
      log-path: ${DATASET_BUILD_LOG_PREFIX:dataset-build/logs}
      gc-rate: ${DATASET_BUILD_FILES_GC_RATE:0 0 0 * * ?}
    load:
      batch-size: ${DATASET_CONSUMPTION_BATCH_SIZE:50}
      read:
        log-cache-capacity: ${DATASET_CONSUMPTION_LOG_CACHE_CAPACITY:1000}
        log-cache-size: ${DATASET_CONSUMPTION_LOG_CACHE_SIZE:1000}
        log-cache-timeout: ${DATASET_CONSUMPTION_LOG_CACHE_TIMEOUT:24h}
        lock-wait-seconds: ${DATASET_CONSUMPTION_LOCK_WAIT_SECONDS:10}
        deal-error-session-interval-seconds: ${DATASET_CONSUMPTION_DEAL_ERROR_SESSION_INTERNAL_SECONDS:1}
  task:
    dev-port: ${SW_TASK_DEV_PORT:8000}
    deletion-delay-minutes: ${SW_TASK_DELETION_DELAY_MINUTES:30}
  job:
    virtual-specs: ${SW_JOB_VIRTUAL_SPECS_PATH:}
    event:
      task-to-job-cache-capacity: ${SW_JOB_EVENT_TASK_TO_JOB_CACHE_CAPACITY:1000}
      run-to-job-cache-capacity: ${SW_JOB_EVENT_RUN_TO_JOB_CACHE_CAPACITY:1000}
      scheduler-event-log:
        enabled: ${SW_JOB_SCHEDULER_EVENT_LOG_ENABLED:true}
  online-eval:
    max-time-to-live-in-seconds: ${SW_ONLINE_EVAL_MAX_TTL_SECS:43200} # 12h
    max-time-to-wait-in-seconds: ${SW_ONLINE_EVAL_MAX_WAIT_SECS:10} # 10s
    min-time-to-live-in-seconds: ${SW_ONLINE_EVAL_MIN_TTL_SECS:1800} # 30min
  instance-uri: ${SW_INSTANCE_URI:http://console.pre.intra.starwhale.ai}
  scheduler:
    impl: ${SW_SCHEDULER:k8s}
    backOffLimit: ${SW_TASK_BACKOFF_LIMIT:3}
    docker:
      network: ${SW_DOCKER_CONTAINER_NETWORK:host}
      node-ip: ${SW_DOCKER_CONTAINER_NODE_IP:127.0.0.1}
    k8s:
      name-space: ${SW_K8S_NAME_SPACE:default}
      host-path-for-cache: ${SW_K8S_HOST_PATH_FOR_CACHE:}
      event-holder-ttl-in-seconds: ${SW_K8S_EVENT_HOLDER_TTL_IN_SECS:43200} # 12h
      job:
        template-path: ${SW_K8S_JOB_TEMPLATE_PATH:}
        restart-policy: ${SW_K8S_JOB_RESTART_POLICY:Never}
  storage:
    type: ${SW_STORAGE_TYPE:minio}
    path-prefix: ${SW_STORAGE_PREFIX:starwhale}
    fs-config:
      root-dir: ${SW_STORAGE_FS_ROOT_DIR:/usr/local/starwhale}
      service-provider: ${SW_INSTANCE_URI}/obj-store
    s3-config:
      bucket: ${SW_STORAGE_BUCKET:starwhale}
      access-key: ${SW_STORAGE_ACCESSKEY:starwhale}
      secret-key: ${SW_STORAGE_SECRETKEY:starwhale}
      region: ${SW_STORAGE_REGION:local}
      endpoint: ${SW_STORAGE_ENDPOINT:http://localhost:9000}
      huge-file-threshold: 10485760 # 10MB
      huge-file-part-size: 5242880 # 5MB
  controller:
    api-prefix: /api/v1
    white-list: /api/v1/report
  datastore:
    wal-file-size: ${SW_DATASTORE_WAL_FILE_SIZE:65536}
    wal-max-file-size: ${SW_DATASTORE_WAL_MAX_FILE_SIZE:67108864}
    wal-local-cache-dir: ${SW_DATASTORE_WAL_LOCAL_CACHE_DIR:wal_cache}
    oss-max-attempts: ${SW_DATASTORE_WAL_INIT_MAX_ATTEMPTS:5}
    data-root-path: ${SW_DATASTORE_DATA_ROOT_PATH:}
    dump-interval: ${SW_DATASTORE_DUMP_INTERVAL:1h}
    min-no-update-period: ${SW_DATASTORE_MIN_NO_UPDATE_PERIOD:4h}
    min-wal-id-gap: ${SW_DATASTORE_MIN_WAL_ID_GAP:1000}
    parquet:
      compression-codec: ${SW_DATASTORE_PARQUET_COMPRESSION_CODEC:SNAPPY}
      row-group-size: ${SW_DATASTORE_PARQUET_ROW_GROUP_SIZE:128MB}
      page-size: ${SW_DATASTORE_PARQUET_PAGE_SIZE:1MB}
      page-row-count-limit: ${SW_DATASTORE_PARQUET_PAGE_ROW_COUNT_LIMIT:20000}
  blob-service:
    data-root-path: ${SW_BLOB_SERVICE_DATA_ROOT_PATH:blob/}
    url-expiration-time: ${SW_BLOB_SERVICE_URL_EXPIRATION_TIME:4h}
  upgrade:
    enabled: ${SW_UPGRADE_ENABLED:false}
    k8s:
      name-space: ${SW_UPGRADE_K8S_NAME_SPACE:default}
---
#Development
spring:
  boot:
    admin:
      context-path: monitor
      instance-auth:
        default-user-name: ${spring.security.user.name}
        default-password: ${spring.security.user.password}
      server:
        enabled: ${SW_ADMIN_ENABLED:true}
      discovery:
        enabled: ${SW_ADMIN_ENABLED:true}
      client:
        url: http://localhost:${server.port}/${spring.boot.admin.context-path}
        username: ${spring.security.user.name}
        password: ${spring.security.user.password}
        instance:
          metadata:
            user:
              name: ${spring.security.user.name}
              password: ${spring.security.user.password}
          name: StarWhale-Server
        enabled: ${SW_ADMIN_ENABLED:true}
  config:
    activate:
      on-profile: dev
  task:
    execution:
      pool:
        core-size: ${SW_TASK_EXECUTION_POOL_CORE_SIZE:50}
  datasource:
    name: mysql
    driver-class-name: com.mysql.cj.jdbc.Driver
    # timezone setting: https://jira.mariadb.org/browse/CONJ-433
    url: jdbc:mysql://${SW_METADATA_STORAGE_IP:127.0.0.1}:${SW_METADATA_STORAGE_PORT:3306}/${SW_METADATA_STORAGE_DB:starwhale}?useUnicode=true&characterEncoding=UTF-8&createDatabaseIfNotExist=true&allowMultiQueries=true&serverTimezone=UTC&useLegacyDatetimeCode=false&sessionVariables=time_zone='%2B00:00'
    username: ${SW_METADATA_STORAGE_USER:starwhale}
    password: ${SW_METADATA_STORAGE_PASSWORD:starwhale}
    hikari:
      maximum-pool-size: ${SW_METADATA_STORAGE_MAX_POOL_SIZE:20} # mysql server max_connections default is 151
      connection-timeout: ${SW_METADATA_STORAGE_CONNECT_TIMEOUT:50000}
      max-lifetime: ${SW_METADATA_STORAGE_MAX_LIFETIME:1800000}
  flyway:
    locations: "classpath:db/migration"
    ignore-missing-migrations: true
    out-of-order: true
  mvc:
    view:
      suffix: .html
  security:
    user:
      name: starwhaleAdmin
      password: starwhale123

mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath*:mapper/**/*.xml

server:
  tomcat:
    mbeanregistry:
      enabled: ${SW_CONTROLLER_TOMCAT_MBEANREGISTRY_ENABLED:true}
    threads:
      max: ${SW_CONTROLLER_TOMCAT_MAX_THREADS:500}
  port: ${SW_CONTROLLER_PORT:8082}
  shutdown: graceful
  compression:
    enabled: ${SW_COMPRESS_ENABLED:true}
    mime-types: ${SW_COMPRESS_MIME_TYPES:text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml}
    min-response-size: ${SW_COMPRESS_MIN_RESPONSE_SIZE:8096} # default is 2KB
logging:
  level:
    root: ${SW_ROOT_LOG_LEVEL:warn}
    ai.starwhale.mlops: ${SW_BIZ_LOG_LEVEL:info}
    org.springframework.web.filter.CommonsRequestLoggingFilter: ${SW_REQUEST_LOG_LEVEL:info}

management:
  endpoint:
    health:
      show-details: "ALWAYS"
  endpoints:
    web:
      exposure:
        include: ${SW_BIZ_MANAGMENT_EXPOSURE_ENDPOINTS:httptrace,loggers,health,info,metrics,prometheus}
  server:
    port: ${SW_MANAGEMENT_PORT:9082}
  metrics:
    tags:
      application: ${spring.application.name}
