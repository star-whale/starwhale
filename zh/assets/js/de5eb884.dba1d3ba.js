"use strict";(self.webpackChunkstarwhale_docs=self.webpackChunkstarwhale_docs||[]).push([[9169],{3905:function(t,e,a){a.d(e,{Zo:function(){return s},kt:function(){return k}});var n=a(7294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var d=n.createContext({}),o=function(t){var e=n.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},s=function(t){var e=o(t.components);return n.createElement(d.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,r=t.originalType,d=t.parentName,s=p(t,["components","mdxType","originalType","parentName"]),u=o(a),k=l,c=u["".concat(d,".").concat(k)]||u[k]||m[k]||r;return a?n.createElement(c,i(i({ref:e},s),{},{components:a})):n.createElement(c,i({ref:e},s))}));function k(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=a.length,i=new Array(r);i[0]=u;var p={};for(var d in e)hasOwnProperty.call(e,d)&&(p[d]=e[d]);p.originalType=t,p.mdxType="string"==typeof t?t:l,i[1]=p;for(var o=2;o<r;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},4707:function(t,e,a){a.r(e),a.d(e,{assets:function(){return d},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return r},metadata:function(){return p},toc:function(){return o}});var n=a(3117),l=(a(7294),a(3905));const r={title:"\u6570\u636e\u7c7b\u578b"},i=void 0,p={unversionedId:"reference/sdk/data_type",id:"reference/sdk/data_type",title:"\u6570\u636e\u7c7b\u578b",description:"1. starwhale.COCOObjectAnnotation",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/reference/sdk/data_type.md",sourceDirName:"reference/sdk",slug:"/reference/sdk/data_type",permalink:"/zh/docs/reference/sdk/data_type",draft:!1,editUrl:"https://github.com/star-whale/starwhale/tree/main/docs/docs/reference/sdk/data_type.md",tags:[],version:"current",frontMatter:{title:"\u6570\u636e\u7c7b\u578b"},sidebar:"mainSidebar",previous:{title:"\u57fa\u672c\u4fe1\u606f",permalink:"/zh/docs/reference/sdk/overview"},next:{title:"\u6570\u636e\u96c6\u6784\u5efa\u548c\u52a0\u8f7d",permalink:"/zh/docs/reference/sdk/dataset"}},d={},o=[{value:"1. starwhale.COCOObjectAnnotation",id:"1-starwhalecocoobjectannotation",level:2},{value:"1.1 \u4f7f\u7528\u793a\u4f8b",id:"11-\u4f7f\u7528\u793a\u4f8b",level:3},{value:"2. starwhale.GrayscaleImage",id:"2-starwhalegrayscaleimage",level:2},{value:"2.1 \u4f7f\u7528\u793a\u4f8b",id:"21-\u4f7f\u7528\u793a\u4f8b",level:3},{value:"2.2 \u51fd\u6570",id:"22-\u51fd\u6570",level:3},{value:"2.2.1 to_types",id:"221-to_types",level:4},{value:"2.2.2 carry_raw_data",id:"222-carry_raw_data",level:4},{value:"2.2.3 astype",id:"223-astype",level:4},{value:"3. starwhale.BoundingBox",id:"3-starwhaleboundingbox",level:2},{value:"4. starwhale.ClassLabel",id:"4-starwhaleclasslabel",level:2},{value:"5. starwhale.Image",id:"5-starwhaleimage",level:2},{value:"5.1 \u4f7f\u7528\u793a\u4f8b",id:"51-\u4f7f\u7528\u793a\u4f8b",level:3},{value:"5.2 \u51fd\u6570",id:"52-\u51fd\u6570",level:3},{value:"5.2.1 to_types",id:"521-to_types",level:4},{value:"5.2.2 carry_raw_data",id:"522-carry_raw_data",level:4},{value:"5.2.3 astype",id:"523-astype",level:4},{value:"6. starwhale.Audio",id:"6-starwhaleaudio",level:2},{value:"6.1 \u4f7f\u7528\u793a\u4f8b",id:"61-\u4f7f\u7528\u793a\u4f8b",level:3},{value:"6.2 \u51fd\u6570",id:"62-\u51fd\u6570",level:3},{value:"6.2.1 to_types",id:"621-to_types",level:4},{value:"6.2.2 carry_raw_data",id:"622-carry_raw_data",level:4},{value:"6.2.3 astype",id:"623-astype",level:4},{value:"7. starwhale.Text",id:"7-starwhaletext",level:2},{value:"7.1 \u4f7f\u7528\u793a\u4f8b",id:"71-\u4f7f\u7528\u793a\u4f8b",level:3},{value:"7.2 \u51fd\u6570",id:"72-\u51fd\u6570",level:3},{value:"7.2.1 to_types",id:"721-to_types",level:4},{value:"7.2.2 carry_raw_data",id:"722-carry_raw_data",level:4},{value:"7.2.3 astype",id:"723-astype",level:4},{value:"7.2.4 to_str",id:"724-to_str",level:4},{value:"8. starwhale.Binary",id:"8-starwhalebinary",level:2},{value:"8.1 \u51fd\u6570",id:"81-\u51fd\u6570",level:3},{value:"8.1.1 to_types",id:"811-to_types",level:4},{value:"8.1.2 carry_raw_data",id:"812-carry_raw_data",level:4},{value:"8.1.3 astype",id:"813-astype",level:4},{value:"9. starwhale.Link",id:"9-starwhalelink",level:2},{value:"9.1 \u4f7f\u7528\u793a\u4f8b",id:"91-\u4f7f\u7528\u793a\u4f8b",level:3},{value:"9.2 \u51fd\u6570",id:"92-\u51fd\u6570",level:3},{value:"9.2.1 astype",id:"921-astype",level:4},{value:"starwhale.S3LinkAuth",id:"starwhales3linkauth",level:2},{value:"9.3 \u4f7f\u7528\u793a\u4f8b",id:"93-\u4f7f\u7528\u793a\u4f8b",level:3},{value:"10. starwhale.LocalFSLinkAuth",id:"10-starwhalelocalfslinkauth",level:2},{value:"11. starwhale.DefaultS3LinkAuth",id:"11-starwhaledefaults3linkauth",level:2},{value:"12. starwhale.MIMEType",id:"12-starwhalemimetype",level:2},{value:"13. starwhale.LinkType",id:"13-starwhalelinktype",level:2}],s={toc:o};function m(t){let{components:e,...a}=t;return(0,l.kt)("wrapper",(0,n.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"1-starwhalecocoobjectannotation"},"1. starwhale.COCOObjectAnnotation"),(0,l.kt)("p",null,"\u63d0\u4f9bCOCO\u7c7b\u578b\u7684\u5b9a\u4e49\uff0cGithub\u4e0a\u7684",(0,l.kt)("a",{parentName:"p",href:"https://github.com/star-whale/starwhale/blob/dc6e6fdeae2f7c5bd0e72ccd8fb50768b1ce0826/client/starwhale/core/dataset/type.py#L403"},"\u4ee3\u7801\u94fe\u63a5"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"COCOObjectAnnotation(\n    id: int,\n    image_id: int,\n    category_id: int,\n    segmentation: Union[t.List, t.Dict],\n    area: Union[float, int],\n    bbox: Union[BoundingBox, t.List[float]],\n    iscrowd: int,\n)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"id")),(0,l.kt)("td",{parentName:"tr",align:null},"object id\uff0c\u4e00\u822c\u4e3a\u5168\u5c40object\u7684\u9012\u589eid")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"image_id")),(0,l.kt)("td",{parentName:"tr",align:null},"image id\uff0c\u4e00\u822c\u4e3a\u56fe\u7247id")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"category_id")),(0,l.kt)("td",{parentName:"tr",align:null},"category id\uff0c\u4e00\u822c\u4e3a\u76ee\u6807\u68c0\u6d4b\u4e2d\u7c7b\u522b\u7684id")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"segmentation")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7269\u4f53\u8f6e\u5ed3\u8868\u793a\uff0cPolygon(\u591a\u8fb9\u5f62\u7684\u70b9)\u6216RLE\u683c\u5f0f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"area")),(0,l.kt)("td",{parentName:"tr",align:null},"object\u9762\u79ef")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"bbox")),(0,l.kt)("td",{parentName:"tr",align:null},"\u8868\u793abounding box\uff0c\u53ef\u4ee5\u4e3aBoundingBox\u7c7b\u578b\u6216float\u7684\u5217\u8868")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"iscrowd")),(0,l.kt)("td",{parentName:"tr",align:null},"0\u8868\u793a\u662f\u4e00\u4e2a\u5355\u72ec\u7684object\uff0c1\u8868\u793a\u4e24\u4e2a\u6ca1\u6709\u5206\u5f00\u7684object")))),(0,l.kt)("h3",{id:"11-\u4f7f\u7528\u793a\u4f8b"},"1.1 \u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'def _make_coco_annotations(\n    self, mask_fpath: Path, image_id: int\n) -> t.List[COCOObjectAnnotation]:\n    mask_img = PILImage.open(str(mask_fpath))\n\n    mask = np.array(mask_img)\n    object_ids = np.unique(mask)[1:]\n    binary_mask = mask == object_ids[:, None, None]\n    # TODO: tune permute without pytorch\n    binary_mask_tensor = torch.as_tensor(binary_mask, dtype=torch.uint8)\n    binary_mask_tensor = (\n        binary_mask_tensor.permute(0, 2, 1).contiguous().permute(0, 2, 1)\n    )\n\n    coco_annotations = []\n    for i in range(0, len(object_ids)):\n        _pos = np.where(binary_mask[i])\n        _xmin, _ymin = float(np.min(_pos[1])), float(np.min(_pos[0]))\n        _xmax, _ymax = float(np.max(_pos[1])), float(np.max(_pos[0]))\n        _bbox = BoundingBox(\n            x=_xmin, y=_ymin, width=_xmax - _xmin, height=_ymax - _ymin\n        )\n\n        rle: t.Dict = coco_mask.encode(binary_mask_tensor[i].numpy())  # type: ignore\n        rle["counts"] = rle["counts"].decode("utf-8")\n\n        coco_annotations.append(\n            COCOObjectAnnotation(\n                id=self.object_id,\n                image_id=image_id,\n                category_id=1,  # PennFudan Dataset only has one class-PASPersonStanding\n                segmentation=rle,\n                area=_bbox.width * _bbox.height,\n                bbox=_bbox,\n                iscrowd=0,  # suppose all instances are not crowd\n            )\n        )\n        self.object_id += 1\n\n    return coco_annotations\n')),(0,l.kt)("h2",{id:"2-starwhalegrayscaleimage"},"2. starwhale.GrayscaleImage"),(0,l.kt)("p",null,"\u63d0\u4f9b\u7070\u5ea6\u56fe\u7c7b\u578b\uff0c\u6bd4\u5982MNIST\u4e2d\u6570\u5b57\u624b\u5199\u4f53\u56fe\u7247\uff0c\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"Image")," \u7c7b\u578b\u7684\u4e00\u4e2a\u7279\u4f8b\u3002Github\u4e0a\u7684",(0,l.kt)("a",{parentName:"p",href:"https://github.com/star-whale/starwhale/blob/dc6e6fdeae2f7c5bd0e72ccd8fb50768b1ce0826/client/starwhale/core/dataset/type.py#L301"},"\u4ee3\u7801\u94fe\u63a5"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'GrayscaleImage(\n    fp: _TArtifactFP = "",\n    display_name: str = "",\n    shape: Optional[_TShape] = None,\n    as_mask: bool = False,\n    mask_uri: str = "",\n)\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"fp")),(0,l.kt)("td",{parentName:"tr",align:null},"\u56fe\u7247\u7684\u8def\u5f84\u3001IO\u5bf9\u8c61\u6216\u6587\u4ef6\u5185\u5bb9\u7684bytes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"display_name")),(0,l.kt)("td",{parentName:"tr",align:null},"Dataset Viewer\u4e0a\u5c55\u793a\u7684\u540d\u5b57")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"shape")),(0,l.kt)("td",{parentName:"tr",align:null},"\u56fe\u7247\u7684Width\u548cHeight\uff0cchannel\u9ed8\u8ba4\u4e3a1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"as_mask")),(0,l.kt)("td",{parentName:"tr",align:null},"\u662f\u5426\u4f5c\u4e3aMask\u56fe\u7247")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"mask_uri")),(0,l.kt)("td",{parentName:"tr",align:null},"Mask\u539f\u56fe\u7684URI")))),(0,l.kt)("h3",{id:"21-\u4f7f\u7528\u793a\u4f8b"},"2.1 \u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'for i in range(0, min(data_number, label_number)):\n    _data = data_file.read(image_size)\n    _label = struct.unpack(">B", label_file.read(1))[0]\n    yield GrayscaleImage(\n        _data,\n        display_name=f"{i}",\n        shape=(height, width, 1),\n    ), {"label": _label}\n')),(0,l.kt)("h3",{id:"22-\u51fd\u6570"},"2.2 \u51fd\u6570"),(0,l.kt)("h4",{id:"221-to_types"},"2.2.1 to_types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'to_bytes(encoding: str= "utf-8") -> bytes\n')),(0,l.kt)("h4",{id:"222-carry_raw_data"},"2.2.2 carry_raw_data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"carry_raw_data() -> GrayscaleImage\n")),(0,l.kt)("h4",{id:"223-astype"},"2.2.3 astype"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"astype() -> Dict[str, t.Any]\n")),(0,l.kt)("h2",{id:"3-starwhaleboundingbox"},"3. starwhale.BoundingBox"),(0,l.kt)("p",null,"\u63d0\u4f9b\u8fb9\u754c\u6846\u7c7b\u578b\uff0c\u76ee\u524d\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"LTWH")," \u683c\u5f0f\uff0c\u5373 ",(0,l.kt)("inlineCode",{parentName:"p"},"left_x"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"top_y"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"width")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"height"),"\u3002Github\u4e0a\u7684",(0,l.kt)("a",{parentName:"p",href:"https://github.com/star-whale/starwhale/blob/dc6e6fdeae2f7c5bd0e72ccd8fb50768b1ce0826/client/starwhale/core/dataset/type.py#L363"},"\u4ee3\u7801\u94fe\u63a5"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"BoundingBox(\n    x: float,\n    y: float,\n    width: float,\n    height: float\n)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"x")),(0,l.kt)("td",{parentName:"tr",align:null},"left_x\u7684\u5750\u6807")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"y")),(0,l.kt)("td",{parentName:"tr",align:null},"top_y\u7684\u5750\u6807")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"width")),(0,l.kt)("td",{parentName:"tr",align:null},"\u56fe\u7247\u7684\u5bbd\u5ea6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"height")),(0,l.kt)("td",{parentName:"tr",align:null},"\u56fe\u7247\u7684\u9ad8\u5ea6")))),(0,l.kt)("h2",{id:"4-starwhaleclasslabel"},"4. starwhale.ClassLabel"),(0,l.kt)("p",null,"\u63cf\u8ff0label\u7684\u6570\u91cf\u548c\u7c7b\u578b\uff0cGithub\u4e0a\u7684",(0,l.kt)("a",{parentName:"p",href:"https://github.com/star-whale/starwhale/blob/dc6e6fdeae2f7c5bd0e72ccd8fb50768b1ce0826/client/starwhale/core/dataset/type.py#L344"},"\u4ee3\u7801\u94fe\u63a5"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"ClassLabel(\n     names: List[Union[int, float, str]]\n)\n")),(0,l.kt)("h2",{id:"5-starwhaleimage"},"5. starwhale.Image"),(0,l.kt)("p",null,"\u56fe\u7247\u7c7b\u578b\uff0cGithub\u4e0a\u7684",(0,l.kt)("a",{parentName:"p",href:"https://github.com/star-whale/starwhale/blob/dc6e6fdeae2f7c5bd0e72ccd8fb50768b1ce0826/client/starwhale/core/dataset/type.py#L267"},"\u4ee3\u7801\u94fe\u63a5"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'Image(\n    fp: _TArtifactFP = "",\n    display_name: str = "",\n    shape: Optional[_TShape] = None,\n    mime_type: Optional[MIMEType] = None,\n    as_mask: bool = False,\n    mask_uri: str = "",\n)\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"fp")),(0,l.kt)("td",{parentName:"tr",align:null},"\u56fe\u7247\u7684\u8def\u5f84\u3001IO\u5bf9\u8c61\u6216\u6587\u4ef6\u5185\u5bb9\u7684bytes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"display_name")),(0,l.kt)("td",{parentName:"tr",align:null},"Dataset Viewer\u4e0a\u5c55\u793a\u7684\u540d\u5b57")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"shape")),(0,l.kt)("td",{parentName:"tr",align:null},"\u56fe\u7247\u7684Width\u3001Height\u548cchannel")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"mime_type")),(0,l.kt)("td",{parentName:"tr",align:null},"MIMEType\u652f\u6301\u7684\u7c7b\u578b")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"as_mask")),(0,l.kt)("td",{parentName:"tr",align:null},"\u662f\u5426\u4f5c\u4e3aMask\u56fe\u7247")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"mask_uri")),(0,l.kt)("td",{parentName:"tr",align:null},"Mask\u539f\u56fe\u7684URI")))),(0,l.kt)("h3",{id:"51-\u4f7f\u7528\u793a\u4f8b"},"5.1 \u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import io\nimport typing as t\nimport pickle\nfrom PIL import Image as PILImage\nfrom starwhale import Image, MIMEType\n\ndef _iter_item(paths: t.List[Path]) -> t.Generator[t.Tuple[t.Any, t.Dict], None, None]:\n    for path in paths:\n        with path.open("rb") as f:\n            content = pickle.load(f, encoding="bytes")\n            for data, label, filename in zip(\n                content[b"data"], content[b"labels"], content[b"filenames"]\n            ):\n                annotations = {\n                    "label": label,\n                    "label_display_name": dataset_meta["label_names"][label],\n                }\n\n                image_array = data.reshape(3, 32, 32).transpose(1, 2, 0)\n                image_bytes = io.BytesIO()\n                PILImage.fromarray(image_array).save(image_bytes, format="PNG")\n\n                yield Image(\n                    fp=image_bytes.getvalue(),\n                    display_name=filename.decode(),\n                    shape=image_array.shape,\n                    mime_type=MIMEType.PNG,\n                ), annotations\n\n\n')),(0,l.kt)("h3",{id:"52-\u51fd\u6570"},"5.2 \u51fd\u6570"),(0,l.kt)("h4",{id:"521-to_types"},"5.2.1 to_types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'to_bytes(encoding: str= "utf-8") -> bytes\n')),(0,l.kt)("h4",{id:"522-carry_raw_data"},"5.2.2 carry_raw_data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"carry_raw_data() -> GrayscaleImage\n")),(0,l.kt)("h4",{id:"523-astype"},"5.2.3 astype"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"astype() -> Dict[str, t.Any]\n")),(0,l.kt)("h2",{id:"6-starwhaleaudio"},"6. starwhale.Audio"),(0,l.kt)("p",null,"\u97f3\u9891\u7c7b\u578b\uff0cGithub\u4e0a\u7684",(0,l.kt)("a",{parentName:"p",href:"https://github.com/star-whale/starwhale/blob/dc6e6fdeae2f7c5bd0e72ccd8fb50768b1ce0826/client/starwhale/core/dataset/type.py#L324"},"\u4ee3\u7801\u94fe\u63a5"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'Audio(\n    fp: _TArtifactFP = "",\n    display_name: str = "",\n    shape: Optional[_TShape] = None,\n    mime_type: Optional[MIMEType] = None,\n)\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"fp")),(0,l.kt)("td",{parentName:"tr",align:null},"\u56fe\u7247\u7684\u8def\u5f84\u3001IO\u5bf9\u8c61\u6216\u6587\u4ef6\u5185\u5bb9\u7684bytes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"display_name")),(0,l.kt)("td",{parentName:"tr",align:null},"Dataset Viewer\u4e0a\u5c55\u793a\u7684\u540d\u5b57")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"shape")),(0,l.kt)("td",{parentName:"tr",align:null},"\u56fe\u7247\u7684Width\u3001Height\u548cchannel")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"mime_type")),(0,l.kt)("td",{parentName:"tr",align:null},"MIMEType\u652f\u6301\u7684\u7c7b\u578b")))),(0,l.kt)("h3",{id:"61-\u4f7f\u7528\u793a\u4f8b"},"6.1 \u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import typing as t\nfrom starwhale import Audio\n\ndef iter_item() -> t.Generator[t.Tuple[t.Any, t.Any], None, None]:\n    for path in validation_ds_paths:\n        with path.open() as f:\n            for item in f.readlines():\n                item = item.strip()\n                if not item:\n                    continue\n\n                data_path = dataset_dir / item\n                data = Audio(\n                    data_path, display_name=item, shape=(1,), mime_type=MIMEType.WAV\n                )\n\n                speaker_id, utterance_num = data_path.stem.split("_nohash_")\n                annotations = {\n                    "label": data_path.parent.name,\n                    "speaker_id": speaker_id,\n                    "utterance_num": int(utterance_num),\n                }\n                yield data, annotations\n')),(0,l.kt)("h3",{id:"62-\u51fd\u6570"},"6.2 \u51fd\u6570"),(0,l.kt)("h4",{id:"621-to_types"},"6.2.1 to_types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'to_bytes(encoding: str= "utf-8") -> bytes\n')),(0,l.kt)("h4",{id:"622-carry_raw_data"},"6.2.2 carry_raw_data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"carry_raw_data() -> GrayscaleImage\n")),(0,l.kt)("h4",{id:"623-astype"},"6.2.3 astype"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"astype() -> Dict[str, t.Any]\n")),(0,l.kt)("h2",{id:"7-starwhaletext"},"7. starwhale.Text"),(0,l.kt)("p",null,"\u6587\u672c\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"utf-8")," \u683c\u5f0f\u3002Github\u4e0a\u7684",(0,l.kt)("a",{parentName:"p",href:"https://github.com/star-whale/starwhale/blob/dc6e6fdeae2f7c5bd0e72ccd8fb50768b1ce0826/client/starwhale/core/dataset/type.py#L380"},"\u4ee3\u7801\u94fe\u63a5"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'Text(\n    content: str,\n    encoding: str = "utf-8",\n)\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"content")),(0,l.kt)("td",{parentName:"tr",align:null},"text\u5185\u5bb9")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"encoding")),(0,l.kt)("td",{parentName:"tr",align:null},"text\u7684\u7f16\u7801\u683c\u5f0f")))),(0,l.kt)("h3",{id:"71-\u4f7f\u7528\u793a\u4f8b"},"7.1 \u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import typing as t\nfrom pathlib import Path\nfrom starwhale import Text\n\ndef iter_item(self) -> t.Generator[t.Tuple[t.Any, t.Any], None, None]:\n    root_dir = Path(__file__).parent.parent / "data"\n\n    with (root_dir / "fra-test.txt").open("r") as f:\n        for line in f.readlines():\n            line = line.strip()\n            if not line or line.startswith("CC-BY"):\n                continue\n\n            _data, _label, *_ = line.split("\\t")\n            data = Text(_data, encoding="utf-8")\n            annotations = {"label": _label}\n            yield data, annotations\n')),(0,l.kt)("h3",{id:"72-\u51fd\u6570"},"7.2 \u51fd\u6570"),(0,l.kt)("h4",{id:"721-to_types"},"7.2.1 to_types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'to_bytes(encoding: str= "utf-8") -> bytes\n')),(0,l.kt)("h4",{id:"722-carry_raw_data"},"7.2.2 carry_raw_data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"carry_raw_data() -> GrayscaleImage\n")),(0,l.kt)("h4",{id:"723-astype"},"7.2.3 astype"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"astype() -> Dict[str, t.Any]\n")),(0,l.kt)("h4",{id:"724-to_str"},"7.2.4 to_str"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"to_str() -> str\n")),(0,l.kt)("h2",{id:"8-starwhalebinary"},"8. starwhale.Binary"),(0,l.kt)("p",null,"\u4e8c\u8fdb\u5236\u7c7b\u578b\uff0c\u7528bytes\u5b58\u50a8\uff0cGithub\u4e0a\u7684",(0,l.kt)("a",{parentName:"p",href:"https://github.com/star-whale/starwhale/blob/dc6e6fdeae2f7c5bd0e72ccd8fb50768b1ce0826/client/starwhale/core/dataset/type.py#L258"},"\u4ee3\u7801\u94fe\u63a5"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'Binary(\n    fp: _TArtifactFP = "",\n    mime_type: MIMEType = MIMEType.UNDEFINED,\n)\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"fp")),(0,l.kt)("td",{parentName:"tr",align:null},"\u8def\u5f84\u3001IO\u5bf9\u8c61\u6216\u6587\u4ef6\u5185\u5bb9\u7684bytes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"mime_type")),(0,l.kt)("td",{parentName:"tr",align:null},"MIMEType\u652f\u6301\u7684\u7c7b\u578b")))),(0,l.kt)("h3",{id:"81-\u51fd\u6570"},"8.1 \u51fd\u6570"),(0,l.kt)("h4",{id:"811-to_types"},"8.1.1 to_types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'to_bytes(encoding: str= "utf-8") -> bytes\n')),(0,l.kt)("h4",{id:"812-carry_raw_data"},"8.1.2 carry_raw_data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"carry_raw_data() -> GrayscaleImage\n")),(0,l.kt)("h4",{id:"813-astype"},"8.1.3 astype"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"astype() -> Dict[str, t.Any]\n")),(0,l.kt)("h2",{id:"9-starwhalelink"},"9. starwhale.Link"),(0,l.kt)("p",null,"Link\u7c7b\u578b\uff0c\u7528\u6765\u5236\u4f5c ",(0,l.kt)("inlineCode",{parentName:"p"},"remote-link")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"user-raw")," \u7c7b\u578b\u7684\u6570\u636e\u96c6\u3002Github\u4e0a\u7684",(0,l.kt)("a",{parentName:"p",href:"https://github.com/star-whale/starwhale/blob/dc6e6fdeae2f7c5bd0e72ccd8fb50768b1ce0826/client/starwhale/core/dataset/type.py#L432"},"\u4ee3\u7801\u94fe\u63a5"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"Link(\n    uri: str,\n    auth: Optional[LinkAuth] = DefaultS3LinkAuth,\n    offset: int = 0,\n    size: int = -1,\n    data_type: Optional[BaseArtifact] = None,\n    with_local_fs_data: bool = False,\n)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uri")),(0,l.kt)("td",{parentName:"tr",align:null},"\u539f\u59cb\u6570\u636e\u7684uri\u5730\u5740\uff0c\u76ee\u524d\u652f\u6301localFS\u548cS3\u4e24\u79cd\u534f\u8bae")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"auth")),(0,l.kt)("td",{parentName:"tr",align:null},"Link Auth\u4fe1\u606f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"offset")),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u636e\u76f8\u5bf9uri\u6307\u5411\u7684\u6587\u4ef6\u504f\u79fb\u91cf")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"size")),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u636e\u5927\u5c0f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"data_type")),(0,l.kt)("td",{parentName:"tr",align:null},"Link\u6307\u5411\u7684\u5b9e\u9645\u6570\u636e\u7c7b\u578b\uff0c\u76ee\u524d\u652f\u6301 ",(0,l.kt)("inlineCode",{parentName:"td"},"Binary"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"Image"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"Text"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"Audio")," \u56db\u79cd\u7c7b\u578b")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"with_local_fs_data")),(0,l.kt)("td",{parentName:"tr",align:null},"\u662f\u5426\u5305\u542b\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6570\u636e\uff0c\u7528\u4e8e\u8868\u793auser-raw\u683c\u5f0f\u7684\u6570\u636e")))),(0,l.kt)("h3",{id:"91-\u4f7f\u7528\u793a\u4f8b"},"9.1 \u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import typing as t\nimport struct\nfrom pathlib import Path\n\nfrom starwhale import Link\n\ndef iter_item() -> t.Generator[t.Tuple[t.Any, t.Any], None, None]:\n    root_dir = Path(__file__).parent.parent / "data"\n    data_fpath = root_dir / "t10k-images-idx3-ubyte"\n    label_fpath = root_dir / "t10k-labels-idx1-ubyte"\n\n    with data_fpath.open("rb") as data_file, label_fpath.open("rb") as label_file:\n        _, data_number, height, width = struct.unpack(">IIII", data_file.read(16))\n        _, label_number = struct.unpack(">II", label_file.read(8))\n\n        image_size = height * width\n        offset = 16\n\n        for i in range(0, min(data_number, label_number)):\n            _data = Link(\n                uri=str(data_fpath.absolute()),\n                offset=offset,\n                size=image_size,\n                data_type=GrayscaleImage(\n                    display_name=f"{i}", shape=(height, width, 1)\n                ),\n                with_local_fs_data=True,\n            )\n            _label = struct.unpack(">B", label_file.read(1))[0]\n            yield _data, {"label": _label}\n            offset += image_size\n\n')),(0,l.kt)("h3",{id:"92-\u51fd\u6570"},"9.2 \u51fd\u6570"),(0,l.kt)("h4",{id:"921-astype"},"9.2.1 astype"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"astype() -> Dict[str, t.Any]\n")),(0,l.kt)("h2",{id:"starwhales3linkauth"},"starwhale.S3LinkAuth"),(0,l.kt)("p",null,"\u5f53\u6570\u636e\u5b58\u50a8\u5728\u57fa\u4e8eS3\u534f\u8bae\u7684\u5bf9\u8c61\u5b58\u50a8\u4e0a\u65f6\uff0c\u8be5\u7c7b\u578b\u8d1f\u8d23\u63cf\u8ff0\u6388\u6743\u3001\u5bc6\u94a5\u4fe1\u606f\u3002Github\u4e0a\u7684",(0,l.kt)("a",{parentName:"p",href:"https://github.com/star-whale/starwhale/blob/dc6e6fdeae2f7c5bd0e72ccd8fb50768b1ce0826/client/starwhale/core/dataset/type.py#L52"},"\u4ee3\u7801\u94fe\u63a5"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'S3LinkAuth(\n    name: str = "",\n    access_key: str = "",\n    secret: str = "",\n    endpoint: str = "",\n    region: str = "local",\n)\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"name")),(0,l.kt)("td",{parentName:"tr",align:null},"Auth\u7684\u540d\u79f0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"access_key")),(0,l.kt)("td",{parentName:"tr",align:null},"S3\u8fde\u63a5\u4e2d\u7684access_key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"secret")),(0,l.kt)("td",{parentName:"tr",align:null},"S3\u8fde\u63a5\u4e2d\u7684secret")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"endpoint")),(0,l.kt)("td",{parentName:"tr",align:null},"S3\u8fde\u63a5\u4e2d\u7684endpoint\u5730\u5740")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"region")),(0,l.kt)("td",{parentName:"tr",align:null},"bucket\u6240\u5728\u7684S3 region\uff0c\u9ed8\u8ba4\u4e3alocal")))),(0,l.kt)("h3",{id:"93-\u4f7f\u7528\u793a\u4f8b"},"9.3 \u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import struct\nimport typing as t\nfrom pathlib import Path\n\nfrom starwhale import (\n    Link,\n    S3LinkAuth,\n    GrayscaleImage,\n    UserRawBuildExecutor,\n)\nclass LinkRawDatasetProcessExecutor(UserRawBuildExecutor):\n    _auth = S3LinkAuth(name="mnist", access_key="minioadmin", secret="minioadmin")\n    _endpoint = "10.131.0.1:9000"\n    _bucket = "users"\n\n    def iter_item(self) -> t.Generator[t.Tuple[t.Any, t.Any], None, None]:\n        root_dir = Path(__file__).parent.parent / "data"\n\n        with (root_dir / "t10k-labels-idx1-ubyte").open("rb") as label_file:\n            _, label_number = struct.unpack(">II", label_file.read(8))\n\n            offset = 16\n            image_size = 28 * 28\n\n            uri = f"s3://{self._endpoint}/{self._bucket}/dataset/mnist/t10k-images-idx3-ubyte"\n            for i in range(label_number):\n                _data = Link(\n                    f"{uri}",\n                    self._auth,\n                    offset=offset,\n                    size=image_size,\n                    data_type=GrayscaleImage(display_name=f"{i}", shape=(28, 28, 1)),\n                )\n                _label = struct.unpack(">B", label_file.read(1))[0]\n                yield _data, {"label": _label}\n                offset += image_size\n')),(0,l.kt)("h2",{id:"10-starwhalelocalfslinkauth"},"10. starwhale.LocalFSLinkAuth"),(0,l.kt)("p",null,"\u63cf\u8ff0\u6570\u636e\u5b58\u50a8\u5728\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e0a\uff0cGithub\u4e0a\u7684",(0,l.kt)("a",{parentName:"p",href:"https://github.com/star-whale/starwhale/blob/dc6e6fdeae2f7c5bd0e72ccd8fb50768b1ce0826/client/starwhale/core/dataset/type.py#L151"},"\u4ee3\u7801\u94fe\u63a5"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"LocalFSLinkAuth = partial(LinkAuth, ltype=LinkType.LocalFS)\n")),(0,l.kt)("h2",{id:"11-starwhaledefaults3linkauth"},"11. starwhale.DefaultS3LinkAuth"),(0,l.kt)("p",null,"\u4f7f\u7528\u9ed8\u8ba4\u503c\u521d\u59cb\u5316 ",(0,l.kt)("inlineCode",{parentName:"p"},"S3LinkAuth")," \u7c7b\u578b\u540e\u5f97\u5230\u7684\u53d8\u91cf, Github\u4e0a\u7684",(0,l.kt)("a",{parentName:"p",href:"https://github.com/star-whale/starwhale/blob/dc6e6fdeae2f7c5bd0e72ccd8fb50768b1ce0826/client/starwhale/core/dataset/type.py#L152"},"\u4ee3\u7801\u94fe\u63a5"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"DefaultS3LinkAuth = S3LinkAuth()\n")),(0,l.kt)("h2",{id:"12-starwhalemimetype"},"12. starwhale.MIMEType"),(0,l.kt)("p",null,"\u63cf\u8ff0Starwhale\u652f\u6301\u7684\u591a\u5a92\u4f53\u7c7b\u578b\uff0c\u7528Python Enum\u7c7b\u578b\u5b9e\u73b0\uff0c\u7528\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"Image"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"Video")," \u7b49\u7c7b\u578b\u7684mime_type \u5c5e\u6027\u4e0a\uff0c\u80fd\u66f4\u597d\u7684\u8fdb\u884cDataset Viewer\u3002Github\u4e0a\u7684",(0,l.kt)("a",{parentName:"p",href:"https://github.com/star-whale/starwhale/blob/dc6e6fdeae2f7c5bd0e72ccd8fb50768b1ce0826/client/starwhale/core/dataset/type.py#L106"},"\u4ee3\u7801\u94fe\u63a5"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'class MIMEType(Enum):\n    PNG = "image/png"\n    JPEG = "image/jpeg"\n    WEBP = "image/webp"\n    SVG = "image/svg+xml"\n    GIF = "image/gif"\n    APNG = "image/apng"\n    AVIF = "image/avif"\n    MP4 = "video/mp4"\n    AVI = "video/avi"\n    WAV = "audio/wav"\n    MP3 = "audio/mp3"\n    PLAIN = "text/plain"\n    CSV = "text/csv"\n    HTML = "text/html"\n    GRAYSCALE = "x/grayscale"\n    UNDEFINED = "x/undefined"\n')),(0,l.kt)("h2",{id:"13-starwhalelinktype"},"13. starwhale.LinkType"),(0,l.kt)("p",null,"\u63cf\u8ff0Starwhale\u652f\u6301\u7684remote-link\u7c7b\u578b\uff0c\u7528Python Enum\u7c7b\u578b\u5b9e\u73b0\uff0c\u76ee\u524d\u652f\u6301 ",(0,l.kt)("inlineCode",{parentName:"p"},"LocalFS")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"S3")," \u4e24\u79cd\u7c7b\u578b\u3002Github\u4e0a\u7684",(0,l.kt)("a",{parentName:"p",href:"https://github.com/star-whale/starwhale/blob/dc6e6fdeae2f7c5bd0e72ccd8fb50768b1ce0826/client/starwhale/core/dataset/type.py#L23"},"\u4ee3\u7801\u94fe\u63a5"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'class LinkType(Enum):\n    LocalFS = "local_fs"\n    S3 = "s3"\n    UNDEFINED = "undefined"\n')))}m.isMDXComponent=!0}}]);