# The docker compose yaml file is generated by `swcli server start` command.
name: starwhale_local
services:
  db:
    image: {{db_image}}
    restart: always
    healthcheck:
      test: ["CMD", '/opt/bitnami/scripts/mysql/healthcheck.sh']
      interval: 15s
      timeout: 5s
      retries: 10
    networks:
      - ns
    volumes:
      - db:/bitnami/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=starwhale
      - MYSQL_USER=starwhale
      - MYSQL_PASSWORD=starwhale
      - MYSQL_DATABASE=starwhale
    labels:
      com.starwhale.description: "MySQL for Starwhale Server"
      com.starwhale.component: "db"

  server:
    image: {{server_image}}
    restart: always
    depends_on:
      db:
        condition: service_healthy
        restart: true
    environment:
      - JAR=controller
      - SW_CONTROLLER_PORT=8082
      - SW_JWT_TOKEN_EXPIRE_MINUTES=144000
      - SW_UPLOAD_MAX_FILE_SIZE=20480MB
      - SW_STORAGE_PREFIX=starwhale
      - SW_STORAGE_FS_ROOT_DIR=/usr/local/starwhale
      - SW_DOCKER_REGISTRY_URL=docker-registry.starwhale.cn
      - SW_SCHEDULER=docker
      - SW_METADATA_STORAGE_IP=db
      - SW_METADATA_STORAGE_PORT=3306
      - SW_METADATA_STORAGE_USER=starwhale
      - SW_METADATA_STORAGE_PASSWORD=starwhale
      - SW_DATASTORE_WAL_LOCAL_CACHE_DIR=/opt/starwhale.java/datastore-wal-cache
      - SW_STORAGE_TYPE=fs
      - SW_DOCKER_CONTAINER_NETWORK=starwhale_local_ns
      - SW_INSTANCE_URI=http://server:8082
      - SW_DATASET_BUILD_PYTHON_VERSION=3.10
      - SW_DATASET_BUILD_CLI_VERSION={{starwhale_version}}
      - SW_PYPI_INDEX_URL=https://pypi.tuna.tsinghua.edu.cn/simple
      - SW_PYPI_EXTRA_INDEX_URL=https://mirrors.aliyun.com/pypi/simple
      {% for env in envs %}
      - {{env}}
      {% endfor %}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - wal:/opt/starwhale.java/datastore-wal-cache
      - fs:/usr/local/starwhale
    labels:
      com.starwhale.description: "Starwhale Server"
      com.starwhale.version: "{{starwhale_version}}"
      com.starwhale.component: "server"
    networks:
      - ns
    ports:
      - target: {{host_port}}
        host_ip: {{host_ip}}
        published: 8082
        protocol: tcp
        mode: host

volumes:
  db: {}
  wal: {}
  fs: {}

networks:
  ns: {}
