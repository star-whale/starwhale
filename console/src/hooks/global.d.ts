/// <reference types="react" />
import { IUserSchema } from '@user/schemas/user';
import { IProjectSchema } from '@project/schemas/project';
import { IModelDetailSchema } from '@model/schemas/model';
import { IModelVersionDetailSchema } from '@model/schemas/modelVersion';
import { IDatasetDetailSchema } from '@/domain/dataset/schemas/dataset';
import { IDatasetVersionDetailSchema } from '@/domain/dataset/schemas/datasetVersion';
import { IJobSchema } from '@/domain/job/schemas/job';
import { ThemeType } from '@/theme';
import { Role } from '@/api/const';
import { IRuntimeDetailSchema } from '@/domain/runtime/schemas/runtime';
declare const useGlobalState: <StateKey extends "job" | "dataset" | "project" | "user" | "runtime" | "token" | "role" | "themeType" | "currentUser" | "userLoading" | "projectLoading" | "model" | "modelLoading" | "modelVersion" | "modelVersionLoading" | "datasetLoading" | "datasetVersion" | "datasetVersionLoading" | "runtimeLoading" | "runtimeVersion" | "runtimeVersionLoading" | "jobLoading" | "task" | "taskLoading" | "drawerExpanded">(stateKey: StateKey) => readonly [{
    token: string | undefined;
    themeType: ThemeType;
    currentUser: IUserSchema | undefined;
    user: IUserSchema | undefined;
    userLoading: boolean;
    project: IProjectSchema | undefined;
    projectLoading: boolean;
    model: IModelDetailSchema | undefined;
    modelLoading: boolean;
    modelVersion: IModelVersionDetailSchema | undefined;
    modelVersionLoading: boolean;
    dataset: IDatasetDetailSchema | undefined;
    datasetLoading: boolean;
    datasetVersion: IDatasetVersionDetailSchema | undefined;
    datasetVersionLoading: boolean;
    runtime: IRuntimeDetailSchema | undefined;
    runtimeLoading: boolean;
    runtimeVersion: IRuntimeDetailSchema | undefined;
    runtimeVersionLoading: boolean;
    job: IJobSchema | undefined;
    jobLoading: boolean;
    task: import("@/domain/job/schemas/task").ITaskSchema | undefined;
    taskLoading: boolean;
    drawerExpanded: boolean;
    role: Role;
}[StateKey], (u: import("react").SetStateAction<{
    token: string | undefined;
    themeType: ThemeType;
    currentUser: IUserSchema | undefined;
    user: IUserSchema | undefined;
    userLoading: boolean;
    project: IProjectSchema | undefined;
    projectLoading: boolean;
    model: IModelDetailSchema | undefined;
    modelLoading: boolean;
    modelVersion: IModelVersionDetailSchema | undefined;
    modelVersionLoading: boolean;
    dataset: IDatasetDetailSchema | undefined;
    datasetLoading: boolean;
    datasetVersion: IDatasetVersionDetailSchema | undefined;
    datasetVersionLoading: boolean;
    runtime: IRuntimeDetailSchema | undefined;
    runtimeLoading: boolean;
    runtimeVersion: IRuntimeDetailSchema | undefined;
    runtimeVersionLoading: boolean;
    job: IJobSchema | undefined;
    jobLoading: boolean;
    task: import("@/domain/job/schemas/task").ITaskSchema | undefined;
    taskLoading: boolean;
    drawerExpanded: boolean;
    role: Role;
}[StateKey]>) => void];
export default useGlobalState;
