{"version":3,"file":"Webcam.js","sources":["../../icons/src/Camera.svelte","../../icons/src/Circle.svelte","../../icons/src/Square.svelte","../../icons/src/Undo.svelte","../../../node_modules/.pnpm/cropperjs@1.5.12/node_modules/cropperjs/dist/cropper.esm.js","../../../node_modules/.pnpm/resize-observer-polyfill@1.5.1/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../../image/src/Webcam.svelte"],"sourcesContent":["<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\twidth=\"100%\"\n\theight=\"100%\"\n\tviewBox=\"0 0 24 24\"\n\tfill=\"none\"\n\tstroke=\"currentColor\"\n\tstroke-width=\"1.5\"\n\tstroke-linecap=\"round\"\n\tstroke-linejoin=\"round\"\n\tclass=\"feather feather-camera\"\n\t><path\n\t\td=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"\n\t/><circle cx=\"12\" cy=\"13\" r=\"4\" /></svg\n>\n","<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\twidth=\"100%\"\n\theight=\"100%\"\n\tviewBox=\"0 0 24 24\"\n\tfill=\"red\"\n\tstroke=\"red\"\n\tstroke-width=\"1.5\"\n\tstroke-linecap=\"round\"\n\tstroke-linejoin=\"round\"\n\tclass=\"feather feather-circle\"><circle cx=\"12\" cy=\"12\" r=\"10\" /></svg\n>\n","<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\twidth=\"100%\"\n\theight=\"100%\"\n\tviewBox=\"0 0 24 24\"\n\tfill=\"red\"\n\tstroke=\"red\"\n\tstroke-width=\"1.5\"\n\tstroke-linecap=\"round\"\n\tstroke-linejoin=\"round\"\n\tclass=\"feather feather-square\"\n\t><rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" /></svg\n>\n","<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\twidth=\"100%\"\n\theight=\"100%\"\n\tviewBox=\"0 0 24 24\"\n\tfill=\"none\"\n\tstroke=\"currentColor\"\n\tstroke-width=\"1.5\"\n\tstroke-linecap=\"round\"\n\tstroke-linejoin=\"round\"\n\tclass=\"feather feather-rotate-ccw\"\n\t><polyline points=\"1 4 1 10 7 10\" /><path\n\t\td=\"M3.51 15a9 9 0 1 0 2.13-9.36L1 10\"\n\t/></svg\n>\n","/*!\n * Cropper.js v1.5.12\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2021-06-12T08:00:17.411Z\n */\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nvar WINDOW = IS_BROWSER ? window : {};\nvar IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\nvar HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\nvar NAMESPACE = 'cropper'; // Actions\n\nvar ACTION_ALL = 'all';\nvar ACTION_CROP = 'crop';\nvar ACTION_MOVE = 'move';\nvar ACTION_ZOOM = 'zoom';\nvar ACTION_EAST = 'e';\nvar ACTION_WEST = 'w';\nvar ACTION_SOUTH = 's';\nvar ACTION_NORTH = 'n';\nvar ACTION_NORTH_EAST = 'ne';\nvar ACTION_NORTH_WEST = 'nw';\nvar ACTION_SOUTH_EAST = 'se';\nvar ACTION_SOUTH_WEST = 'sw'; // Classes\n\nvar CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\nvar CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\nvar CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\nvar CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\nvar CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\nvar CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\nvar CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\nvar DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\nvar DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\nvar DRAG_MODE_CROP = 'crop';\nvar DRAG_MODE_MOVE = 'move';\nvar DRAG_MODE_NONE = 'none'; // Events\n\nvar EVENT_CROP = 'crop';\nvar EVENT_CROP_END = 'cropend';\nvar EVENT_CROP_MOVE = 'cropmove';\nvar EVENT_CROP_START = 'cropstart';\nvar EVENT_DBLCLICK = 'dblclick';\nvar EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\nvar EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\nvar EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\nvar EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\nvar EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\nvar EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\nvar EVENT_READY = 'ready';\nvar EVENT_RESIZE = 'resize';\nvar EVENT_WHEEL = 'wheel';\nvar EVENT_ZOOM = 'zoom'; // Mime types\n\nvar MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\nvar REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\nvar REGEXP_DATA_URL = /^data:/;\nvar REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\nvar REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n// Inspired by the default width and height of a canvas element.\n\nvar MIN_CONTAINER_WIDTH = 200;\nvar MIN_CONTAINER_HEIGHT = 100;\n\nvar DEFAULTS = {\n  // Define the view mode of the cropper\n  viewMode: 0,\n  // 0, 1, 2, 3\n  // Define the dragging mode of the cropper\n  dragMode: DRAG_MODE_CROP,\n  // 'crop', 'move' or 'none'\n  // Define the initial aspect ratio of the crop box\n  initialAspectRatio: NaN,\n  // Define the aspect ratio of the crop box\n  aspectRatio: NaN,\n  // An object with the previous cropping result data\n  data: null,\n  // A selector for adding extra containers to preview\n  preview: '',\n  // Re-render the cropper when resize the window\n  responsive: true,\n  // Restore the cropped area after resize the window\n  restore: true,\n  // Check if the current image is a cross-origin image\n  checkCrossOrigin: true,\n  // Check the current image's Exif Orientation information\n  checkOrientation: true,\n  // Show the black modal\n  modal: true,\n  // Show the dashed lines for guiding\n  guides: true,\n  // Show the center indicator for guiding\n  center: true,\n  // Show the white modal to highlight the crop box\n  highlight: true,\n  // Show the grid background\n  background: true,\n  // Enable to crop the image automatically when initialize\n  autoCrop: true,\n  // Define the percentage of automatic cropping area when initializes\n  autoCropArea: 0.8,\n  // Enable to move the image\n  movable: true,\n  // Enable to rotate the image\n  rotatable: true,\n  // Enable to scale the image\n  scalable: true,\n  // Enable to zoom the image\n  zoomable: true,\n  // Enable to zoom the image by dragging touch\n  zoomOnTouch: true,\n  // Enable to zoom the image by wheeling mouse\n  zoomOnWheel: true,\n  // Define zoom ratio when zoom the image by wheeling mouse\n  wheelZoomRatio: 0.1,\n  // Enable to move the crop box\n  cropBoxMovable: true,\n  // Enable to resize the crop box\n  cropBoxResizable: true,\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n  toggleDragModeOnDblclick: true,\n  // Size limitation\n  minCanvasWidth: 0,\n  minCanvasHeight: 0,\n  minCropBoxWidth: 0,\n  minCropBoxHeight: 0,\n  minContainerWidth: MIN_CONTAINER_WIDTH,\n  minContainerHeight: MIN_CONTAINER_HEIGHT,\n  // Shortcuts of events\n  ready: null,\n  cropstart: null,\n  cropmove: null,\n  cropend: null,\n  crop: null,\n  zoom: null\n};\n\nvar TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n/**\n * Check if the given value is not a number.\n */\n\nvar isNaN = Number.isNaN || WINDOW.isNaN;\n/**\n * Check if the given value is a number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n */\n\nfunction isNumber(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n/**\n * Check if the given value is a positive number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n */\n\nvar isPositiveNumber = function isPositiveNumber(value) {\n  return value > 0 && value < Infinity;\n};\n/**\n * Check if the given value is undefined.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Check if the given value is an object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n */\n\nfunction isObject(value) {\n  return _typeof(value) === 'object' && value !== null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check if the given value is a plain object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n */\n\nfunction isPlainObject(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  try {\n    var _constructor = value.constructor;\n    var prototype = _constructor.prototype;\n    return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n  } catch (error) {\n    return false;\n  }\n}\n/**\n * Check if the given value is a function.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\nvar slice = Array.prototype.slice;\n/**\n * Convert array-like or iterable object to an array.\n * @param {*} value - The value to convert.\n * @returns {Array} Returns a new array.\n */\n\nfunction toArray(value) {\n  return Array.from ? Array.from(value) : slice.call(value);\n}\n/**\n * Iterate the given data.\n * @param {*} data - The data to iterate.\n * @param {Function} callback - The process function for each element.\n * @returns {*} The original data.\n */\n\nfunction forEach(data, callback) {\n  if (data && isFunction(callback)) {\n    if (Array.isArray(data) || isNumber(data.length)\n    /* array-like */\n    ) {\n        toArray(data).forEach(function (value, key) {\n          callback.call(data, value, key, data);\n        });\n      } else if (isObject(data)) {\n      Object.keys(data).forEach(function (key) {\n        callback.call(data, data[key], key, data);\n      });\n    }\n  }\n\n  return data;\n}\n/**\n * Extend the given object.\n * @param {*} target - The target object to extend.\n * @param {*} args - The rest objects for merging to the target object.\n * @returns {Object} The extended object.\n */\n\nvar assign = Object.assign || function assign(target) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (isObject(target) && args.length > 0) {\n    args.forEach(function (arg) {\n      if (isObject(arg)) {\n        Object.keys(arg).forEach(function (key) {\n          target[key] = arg[key];\n        });\n      }\n    });\n  }\n\n  return target;\n};\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n/**\n * Normalize decimal number.\n * Check out {@link https://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\n\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\nvar REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n/**\n * Apply styles to the given element.\n * @param {Element} element - The target element.\n * @param {Object} styles - The styles for applying.\n */\n\nfunction setStyle(element, styles) {\n  var style = element.style;\n  forEach(styles, function (value, property) {\n    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n      value = \"\".concat(value, \"px\");\n    }\n\n    style[property] = value;\n  });\n}\n/**\n * Check if the given element has a special class.\n * @param {Element} element - The element to check.\n * @param {string} value - The class to search.\n * @returns {boolean} Returns `true` if the special class was found.\n */\n\nfunction hasClass(element, value) {\n  return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n}\n/**\n * Add classes to the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be added.\n */\n\nfunction addClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      addClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.add(value);\n    return;\n  }\n\n  var className = element.className.trim();\n\n  if (!className) {\n    element.className = value;\n  } else if (className.indexOf(value) < 0) {\n    element.className = \"\".concat(className, \" \").concat(value);\n  }\n}\n/**\n * Remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be removed.\n */\n\nfunction removeClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      removeClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(value);\n    return;\n  }\n\n  if (element.className.indexOf(value) >= 0) {\n    element.className = element.className.replace(value, '');\n  }\n}\n/**\n * Add or remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be toggled.\n * @param {boolean} added - Add only.\n */\n\nfunction toggleClass(element, value, added) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      toggleClass(elem, value, added);\n    });\n    return;\n  } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n  if (added) {\n    addClass(element, value);\n  } else {\n    removeClass(element, value);\n  }\n}\nvar REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n/**\n * Transform the given string from camelCase to kebab-case\n * @param {string} value - The value to transform.\n * @returns {string} The transformed value.\n */\n\nfunction toParamCase(value) {\n  return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n}\n/**\n * Get data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to get.\n * @returns {string} The data value.\n */\n\nfunction getData(element, name) {\n  if (isObject(element[name])) {\n    return element[name];\n  }\n\n  if (element.dataset) {\n    return element.dataset[name];\n  }\n\n  return element.getAttribute(\"data-\".concat(toParamCase(name)));\n}\n/**\n * Set data to the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to set.\n * @param {string} data - The data value.\n */\n\nfunction setData(element, name, data) {\n  if (isObject(data)) {\n    element[name] = data;\n  } else if (element.dataset) {\n    element.dataset[name] = data;\n  } else {\n    element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n  }\n}\n/**\n * Remove data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to remove.\n */\n\nfunction removeData(element, name) {\n  if (isObject(element[name])) {\n    try {\n      delete element[name];\n    } catch (error) {\n      element[name] = undefined;\n    }\n  } else if (element.dataset) {\n    // #128 Safari not allows to delete dataset property\n    try {\n      delete element.dataset[name];\n    } catch (error) {\n      element.dataset[name] = undefined;\n    }\n  } else {\n    element.removeAttribute(\"data-\".concat(toParamCase(name)));\n  }\n}\nvar REGEXP_SPACES = /\\s\\s*/;\n\nvar onceSupported = function () {\n  var supported = false;\n\n  if (IS_BROWSER) {\n    var once = false;\n\n    var listener = function listener() {};\n\n    var options = Object.defineProperty({}, 'once', {\n      get: function get() {\n        supported = true;\n        return once;\n      },\n\n      /**\n       * This setter can fix a `TypeError` in strict mode\n       * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n       * @param {boolean} value - The value to set\n       */\n      set: function set(value) {\n        once = value;\n      }\n    });\n    WINDOW.addEventListener('test', listener, options);\n    WINDOW.removeEventListener('test', listener, options);\n  }\n\n  return supported;\n}();\n/**\n * Remove event listener from the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\n\n\nfunction removeListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var handler = listener;\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (!onceSupported) {\n      var listeners = element.listeners;\n\n      if (listeners && listeners[event] && listeners[event][listener]) {\n        handler = listeners[event][listener];\n        delete listeners[event][listener];\n\n        if (Object.keys(listeners[event]).length === 0) {\n          delete listeners[event];\n        }\n\n        if (Object.keys(listeners).length === 0) {\n          delete element.listeners;\n        }\n      }\n    }\n\n    element.removeEventListener(event, handler, options);\n  });\n}\n/**\n * Add event listener to the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\n\nfunction addListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _handler = listener;\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (options.once && !onceSupported) {\n      var _element$listeners = element.listeners,\n          listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n      _handler = function handler() {\n        delete listeners[event][listener];\n        element.removeEventListener(event, _handler, options);\n\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        listener.apply(element, args);\n      };\n\n      if (!listeners[event]) {\n        listeners[event] = {};\n      }\n\n      if (listeners[event][listener]) {\n        element.removeEventListener(event, listeners[event][listener], options);\n      }\n\n      listeners[event][listener] = _handler;\n      element.listeners = listeners;\n    }\n\n    element.addEventListener(event, _handler, options);\n  });\n}\n/**\n * Dispatch event on the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Object} data - The additional event data.\n * @returns {boolean} Indicate if the event is default prevented or not.\n */\n\nfunction dispatchEvent(element, type, data) {\n  var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n  if (isFunction(Event) && isFunction(CustomEvent)) {\n    event = new CustomEvent(type, {\n      detail: data,\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(type, true, true, data);\n  }\n\n  return element.dispatchEvent(event);\n}\n/**\n * Get the offset base on the document.\n * @param {Element} element - The target element.\n * @returns {Object} The offset data.\n */\n\nfunction getOffset(element) {\n  var box = element.getBoundingClientRect();\n  return {\n    left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n    top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n  };\n}\nvar location = WINDOW.location;\nvar REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n/**\n * Check if the given URL is a cross origin URL.\n * @param {string} url - The target URL.\n * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n */\n\nfunction isCrossOriginURL(url) {\n  var parts = url.match(REGEXP_ORIGINS);\n  return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n}\n/**\n * Add timestamp to the given URL.\n * @param {string} url - The target URL.\n * @returns {string} The result URL.\n */\n\nfunction addTimestamp(url) {\n  var timestamp = \"timestamp=\".concat(new Date().getTime());\n  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n}\n/**\n * Get transforms base on the given object.\n * @param {Object} obj - The target object.\n * @returns {string} A string contains transform values.\n */\n\nfunction getTransforms(_ref) {\n  var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n  var values = [];\n\n  if (isNumber(translateX) && translateX !== 0) {\n    values.push(\"translateX(\".concat(translateX, \"px)\"));\n  }\n\n  if (isNumber(translateY) && translateY !== 0) {\n    values.push(\"translateY(\".concat(translateY, \"px)\"));\n  } // Rotate should come first before scale to match orientation transform\n\n\n  if (isNumber(rotate) && rotate !== 0) {\n    values.push(\"rotate(\".concat(rotate, \"deg)\"));\n  }\n\n  if (isNumber(scaleX) && scaleX !== 1) {\n    values.push(\"scaleX(\".concat(scaleX, \")\"));\n  }\n\n  if (isNumber(scaleY) && scaleY !== 1) {\n    values.push(\"scaleY(\".concat(scaleY, \")\"));\n  }\n\n  var transform = values.length ? values.join(' ') : 'none';\n  return {\n    WebkitTransform: transform,\n    msTransform: transform,\n    transform: transform\n  };\n}\n/**\n * Get the max ratio of a group of pointers.\n * @param {string} pointers - The target pointers.\n * @returns {number} The result ratio.\n */\n\nfunction getMaxZoomRatio(pointers) {\n  var pointers2 = _objectSpread2({}, pointers);\n\n  var maxRatio = 0;\n  forEach(pointers, function (pointer, pointerId) {\n    delete pointers2[pointerId];\n    forEach(pointers2, function (pointer2) {\n      var x1 = Math.abs(pointer.startX - pointer2.startX);\n      var y1 = Math.abs(pointer.startY - pointer2.startY);\n      var x2 = Math.abs(pointer.endX - pointer2.endX);\n      var y2 = Math.abs(pointer.endY - pointer2.endY);\n      var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n      var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n      var ratio = (z2 - z1) / z1;\n\n      if (Math.abs(ratio) > Math.abs(maxRatio)) {\n        maxRatio = ratio;\n      }\n    });\n  });\n  return maxRatio;\n}\n/**\n * Get a pointer from an event object.\n * @param {Object} event - The target event object.\n * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n * @returns {Object} The result pointer contains start and/or end point coordinates.\n */\n\nfunction getPointer(_ref2, endOnly) {\n  var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n  var end = {\n    endX: pageX,\n    endY: pageY\n  };\n  return endOnly ? end : _objectSpread2({\n    startX: pageX,\n    startY: pageY\n  }, end);\n}\n/**\n * Get the center point coordinate of a group of pointers.\n * @param {Object} pointers - The target pointers.\n * @returns {Object} The center point coordinate.\n */\n\nfunction getPointersCenter(pointers) {\n  var pageX = 0;\n  var pageY = 0;\n  var count = 0;\n  forEach(pointers, function (_ref3) {\n    var startX = _ref3.startX,\n        startY = _ref3.startY;\n    pageX += startX;\n    pageY += startY;\n    count += 1;\n  });\n  pageX /= count;\n  pageY /= count;\n  return {\n    pageX: pageX,\n    pageY: pageY\n  };\n}\n/**\n * Get the max sizes in a rectangle under the given aspect ratio.\n * @param {Object} data - The original sizes.\n * @param {string} [type='contain'] - The adjust type.\n * @returns {Object} The result sizes.\n */\n\nfunction getAdjustedSizes(_ref4) // or 'cover'\n{\n  var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n  var isValidWidth = isPositiveNumber(width);\n  var isValidHeight = isPositiveNumber(height);\n\n  if (isValidWidth && isValidHeight) {\n    var adjustedWidth = height * aspectRatio;\n\n    if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n  } else if (isValidWidth) {\n    height = width / aspectRatio;\n  } else if (isValidHeight) {\n    width = height * aspectRatio;\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Get the new sizes of a rectangle after rotated.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\n\nfunction getRotatedSizes(_ref5) {\n  var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n  degree = Math.abs(degree) % 180;\n\n  if (degree === 90) {\n    return {\n      width: height,\n      height: width\n    };\n  }\n\n  var arc = degree % 90 * Math.PI / 180;\n  var sinArc = Math.sin(arc);\n  var cosArc = Math.cos(arc);\n  var newWidth = width * cosArc + height * sinArc;\n  var newHeight = width * sinArc + height * cosArc;\n  return degree > 90 ? {\n    width: newHeight,\n    height: newWidth\n  } : {\n    width: newWidth,\n    height: newHeight\n  };\n}\n/**\n * Get a canvas which drew the given image.\n * @param {HTMLImageElement} image - The image for drawing.\n * @param {Object} imageData - The image data.\n * @param {Object} canvasData - The canvas data.\n * @param {Object} options - The options.\n * @returns {HTMLCanvasElement} The result canvas.\n */\n\nfunction getSourceCanvas(image, _ref6, _ref7, _ref8) {\n  var imageAspectRatio = _ref6.aspectRatio,\n      imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n  var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n  var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  var maxSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var minSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n  var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n  // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n  var destMaxSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var destMinSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n  var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n  var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n  canvas.width = normalizeDecimalNumber(width);\n  canvas.height = normalizeDecimalNumber(height);\n  context.fillStyle = fillColor;\n  context.fillRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n  context.rotate(rotate * Math.PI / 180);\n  context.scale(scaleX, scaleY);\n  context.imageSmoothingEnabled = imageSmoothingEnabled;\n  context.imageSmoothingQuality = imageSmoothingQuality;\n  context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n    return Math.floor(normalizeDecimalNumber(param));\n  }))));\n  context.restore();\n  return canvas;\n}\nvar fromCharCode = String.fromCharCode;\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  length += start;\n\n  for (var i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\nvar REGEXP_DATA_URL_HEAD = /^data:.*,/;\n/**\n * Transform Data URL to array buffer.\n * @param {string} dataURL - The Data URL to transform.\n * @returns {ArrayBuffer} The result array buffer.\n */\n\nfunction dataURLToArrayBuffer(dataURL) {\n  var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n  var binary = atob(base64);\n  var arrayBuffer = new ArrayBuffer(binary.length);\n  var uint8 = new Uint8Array(arrayBuffer);\n  forEach(uint8, function (value, i) {\n    uint8[i] = binary.charCodeAt(i);\n  });\n  return arrayBuffer;\n}\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\n\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var chunks = []; // Chunk Typed Array for better performance (#435)\n\n  var chunkSize = 8192;\n  var uint8 = new Uint8Array(arrayBuffer);\n\n  while (uint8.length > 0) {\n    // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n    // eslint-disable-next-line prefer-spread\n    chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n    uint8 = uint8.subarray(chunkSize);\n  }\n\n  return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n}\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\n\nfunction resetAndGetOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation; // Ignores range error when the image does not have correct Exif information\n\n  try {\n    var littleEndian;\n    var app1Start;\n    var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n    if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n      var length = dataView.byteLength;\n      var offset = 2;\n\n      while (offset + 1 < length) {\n        if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n          app1Start = offset;\n          break;\n        }\n\n        offset += 1;\n      }\n    }\n\n    if (app1Start) {\n      var exifIDCode = app1Start + 4;\n      var tiffOffset = app1Start + 10;\n\n      if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n        var endianness = dataView.getUint16(tiffOffset);\n        littleEndian = endianness === 0x4949;\n\n        if (littleEndian || endianness === 0x4D4D\n        /* bigEndian */\n        ) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n      }\n    }\n\n    if (ifdStart) {\n      var _length = dataView.getUint16(ifdStart, littleEndian);\n\n      var _offset;\n\n      var i;\n\n      for (i = 0; i < _length; i += 1) {\n        _offset = ifdStart + i * 12 + 2;\n\n        if (dataView.getUint16(_offset, littleEndian) === 0x0112\n        /* Orientation */\n        ) {\n            // 8 is the offset of the current tag's value\n            _offset += 8; // Get the original orientation value\n\n            orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n      }\n    }\n  } catch (error) {\n    orientation = 1;\n  }\n\n  return orientation;\n}\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\n\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n    // Rotate left 180°\n\n    case 3:\n      rotate = -180;\n      break;\n    // Flip vertical\n\n    case 4:\n      scaleY = -1;\n      break;\n    // Flip vertical and rotate right 90°\n\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n    // Rotate right 90°\n\n    case 6:\n      rotate = 90;\n      break;\n    // Flip horizontal and rotate right 90°\n\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n    // Rotate left 90°\n\n    case 8:\n      rotate = -90;\n      break;\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar render = {\n  render: function render() {\n    this.initContainer();\n    this.initCanvas();\n    this.initCropBox();\n    this.renderCanvas();\n\n    if (this.cropped) {\n      this.renderCropBox();\n    }\n  },\n  initContainer: function initContainer() {\n    var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n    var minWidth = Number(options.minContainerWidth);\n    var minHeight = Number(options.minContainerHeight);\n    addClass(cropper, CLASS_HIDDEN);\n    removeClass(element, CLASS_HIDDEN);\n    var containerData = {\n      width: Math.max(container.offsetWidth, minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH),\n      height: Math.max(container.offsetHeight, minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT)\n    };\n    this.containerData = containerData;\n    setStyle(cropper, {\n      width: containerData.width,\n      height: containerData.height\n    });\n    addClass(element, CLASS_HIDDEN);\n    removeClass(cropper, CLASS_HIDDEN);\n  },\n  // Canvas (image wrapper)\n  initCanvas: function initCanvas() {\n    var containerData = this.containerData,\n        imageData = this.imageData;\n    var viewMode = this.options.viewMode;\n    var rotated = Math.abs(imageData.rotate) % 180 === 90;\n    var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n    var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n    var aspectRatio = naturalWidth / naturalHeight;\n    var canvasWidth = containerData.width;\n    var canvasHeight = containerData.height;\n\n    if (containerData.height * aspectRatio > containerData.width) {\n      if (viewMode === 3) {\n        canvasWidth = containerData.height * aspectRatio;\n      } else {\n        canvasHeight = containerData.width / aspectRatio;\n      }\n    } else if (viewMode === 3) {\n      canvasHeight = containerData.width / aspectRatio;\n    } else {\n      canvasWidth = containerData.height * aspectRatio;\n    }\n\n    var canvasData = {\n      aspectRatio: aspectRatio,\n      naturalWidth: naturalWidth,\n      naturalHeight: naturalHeight,\n      width: canvasWidth,\n      height: canvasHeight\n    };\n    this.canvasData = canvasData;\n    this.limited = viewMode === 1 || viewMode === 2;\n    this.limitCanvas(true, true);\n    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n    canvasData.left = (containerData.width - canvasData.width) / 2;\n    canvasData.top = (containerData.height - canvasData.height) / 2;\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n    this.initialCanvasData = assign({}, canvasData);\n  },\n  limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var viewMode = options.viewMode;\n    var aspectRatio = canvasData.aspectRatio;\n    var cropped = this.cropped && cropBoxData;\n\n    if (sizeLimited) {\n      var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n      var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n      if (viewMode > 1) {\n        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n        if (viewMode === 3) {\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      } else if (viewMode > 0) {\n        if (minCanvasWidth) {\n          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n        } else if (minCanvasHeight) {\n          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n        } else if (cropped) {\n          minCanvasWidth = cropBoxData.width;\n          minCanvasHeight = cropBoxData.height;\n\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      }\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: minCanvasWidth,\n        height: minCanvasHeight\n      });\n\n      minCanvasWidth = _getAdjustedSizes.width;\n      minCanvasHeight = _getAdjustedSizes.height;\n      canvasData.minWidth = minCanvasWidth;\n      canvasData.minHeight = minCanvasHeight;\n      canvasData.maxWidth = Infinity;\n      canvasData.maxHeight = Infinity;\n    }\n\n    if (positionLimited) {\n      if (viewMode > (cropped ? 0 : 1)) {\n        var newCanvasLeft = containerData.width - canvasData.width;\n        var newCanvasTop = containerData.height - canvasData.height;\n        canvasData.minLeft = Math.min(0, newCanvasLeft);\n        canvasData.minTop = Math.min(0, newCanvasTop);\n        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n        canvasData.maxTop = Math.max(0, newCanvasTop);\n\n        if (cropped && this.limited) {\n          canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n          canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n          canvasData.maxLeft = cropBoxData.left;\n          canvasData.maxTop = cropBoxData.top;\n\n          if (viewMode === 2) {\n            if (canvasData.width >= containerData.width) {\n              canvasData.minLeft = Math.min(0, newCanvasLeft);\n              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n            }\n\n            if (canvasData.height >= containerData.height) {\n              canvasData.minTop = Math.min(0, newCanvasTop);\n              canvasData.maxTop = Math.max(0, newCanvasTop);\n            }\n          }\n        }\n      } else {\n        canvasData.minLeft = -canvasData.width;\n        canvasData.minTop = -canvasData.height;\n        canvasData.maxLeft = containerData.width;\n        canvasData.maxTop = containerData.height;\n      }\n    }\n  },\n  renderCanvas: function renderCanvas(changed, transformed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n    if (transformed) {\n      var _getRotatedSizes = getRotatedSizes({\n        width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n        height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n        degree: imageData.rotate || 0\n      }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n\n      var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n      var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n      canvasData.left -= (width - canvasData.width) / 2;\n      canvasData.top -= (height - canvasData.height) / 2;\n      canvasData.width = width;\n      canvasData.height = height;\n      canvasData.aspectRatio = naturalWidth / naturalHeight;\n      canvasData.naturalWidth = naturalWidth;\n      canvasData.naturalHeight = naturalHeight;\n      this.limitCanvas(true, false);\n    }\n\n    if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n      canvasData.left = canvasData.oldLeft;\n    }\n\n    if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n      canvasData.top = canvasData.oldTop;\n    }\n\n    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n    this.limitCanvas(false, true);\n    canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n    canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n    setStyle(this.canvas, assign({\n      width: canvasData.width,\n      height: canvasData.height\n    }, getTransforms({\n      translateX: canvasData.left,\n      translateY: canvasData.top\n    })));\n    this.renderImage(changed);\n\n    if (this.cropped && this.limited) {\n      this.limitCropBox(true, true);\n    }\n  },\n  renderImage: function renderImage(changed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n    var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n    var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n    assign(imageData, {\n      width: width,\n      height: height,\n      left: (canvasData.width - width) / 2,\n      top: (canvasData.height - height) / 2\n    });\n    setStyle(this.image, assign({\n      width: imageData.width,\n      height: imageData.height\n    }, getTransforms(assign({\n      translateX: imageData.left,\n      translateY: imageData.top\n    }, imageData))));\n\n    if (changed) {\n      this.output();\n    }\n  },\n  initCropBox: function initCropBox() {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n    var autoCropArea = Number(options.autoCropArea) || 0.8;\n    var cropBoxData = {\n      width: canvasData.width,\n      height: canvasData.height\n    };\n\n    if (aspectRatio) {\n      if (canvasData.height * aspectRatio > canvasData.width) {\n        cropBoxData.height = cropBoxData.width / aspectRatio;\n      } else {\n        cropBoxData.width = cropBoxData.height * aspectRatio;\n      }\n    }\n\n    this.cropBoxData = cropBoxData;\n    this.limitCropBox(true, true); // Initialize auto crop area\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n    cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n    cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n    cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n    cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n    this.initialCropBoxData = assign({}, cropBoxData);\n  },\n  limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n    var aspectRatio = options.aspectRatio;\n\n    if (sizeLimited) {\n      var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n      var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n      var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n      var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n      if (aspectRatio) {\n        if (minCropBoxWidth && minCropBoxHeight) {\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n        } else if (minCropBoxWidth) {\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n        } else if (minCropBoxHeight) {\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n        }\n\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n        } else {\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n        }\n      } // The minWidth/Height must be less than maxWidth/Height\n\n\n      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n      cropBoxData.maxWidth = maxCropBoxWidth;\n      cropBoxData.maxHeight = maxCropBoxHeight;\n    }\n\n    if (positionLimited) {\n      if (limited) {\n        cropBoxData.minLeft = Math.max(0, canvasData.left);\n        cropBoxData.minTop = Math.max(0, canvasData.top);\n        cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n        cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n      } else {\n        cropBoxData.minLeft = 0;\n        cropBoxData.minTop = 0;\n        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n      }\n    }\n  },\n  renderCropBox: function renderCropBox() {\n    var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n\n    if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n      cropBoxData.left = cropBoxData.oldLeft;\n    }\n\n    if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n      cropBoxData.top = cropBoxData.oldTop;\n    }\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n    this.limitCropBox(false, true);\n    cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n    cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    if (options.movable && options.cropBoxMovable) {\n      // Turn to move the canvas when the crop box is equal to the container\n      setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n    }\n\n    setStyle(this.cropBox, assign({\n      width: cropBoxData.width,\n      height: cropBoxData.height\n    }, getTransforms({\n      translateX: cropBoxData.left,\n      translateY: cropBoxData.top\n    })));\n\n    if (this.cropped && this.limited) {\n      this.limitCanvas(true, true);\n    }\n\n    if (!this.disabled) {\n      this.output();\n    }\n  },\n  output: function output() {\n    this.preview();\n    dispatchEvent(this.element, EVENT_CROP, this.getData());\n  }\n};\n\nvar preview = {\n  initPreview: function initPreview() {\n    var element = this.element,\n        crossOrigin = this.crossOrigin;\n    var preview = this.options.preview;\n    var url = crossOrigin ? this.crossOriginUrl : this.url;\n    var alt = element.alt || 'The image to preview';\n    var image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = url;\n    image.alt = alt;\n    this.viewBox.appendChild(image);\n    this.viewBoxImage = image;\n\n    if (!preview) {\n      return;\n    }\n\n    var previews = preview;\n\n    if (typeof preview === 'string') {\n      previews = element.ownerDocument.querySelectorAll(preview);\n    } else if (preview.querySelector) {\n      previews = [preview];\n    }\n\n    this.previews = previews;\n    forEach(previews, function (el) {\n      var img = document.createElement('img'); // Save the original size for recover\n\n      setData(el, DATA_PREVIEW, {\n        width: el.offsetWidth,\n        height: el.offsetHeight,\n        html: el.innerHTML\n      });\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n      img.alt = alt;\n      /**\n       * Override img element styles\n       * Add `display:block` to avoid margin top issue\n       * Add `height:auto` to override `height` attribute on IE8\n       * (Occur only when margin-top <= -height)\n       */\n\n      img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n      el.innerHTML = '';\n      el.appendChild(img);\n    });\n  },\n  resetPreview: function resetPreview() {\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      setStyle(element, {\n        width: data.width,\n        height: data.height\n      });\n      element.innerHTML = data.html;\n      removeData(element, DATA_PREVIEW);\n    });\n  },\n  preview: function preview() {\n    var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n    var width = imageData.width,\n        height = imageData.height;\n    var left = cropBoxData.left - canvasData.left - imageData.left;\n    var top = cropBoxData.top - canvasData.top - imageData.top;\n\n    if (!this.cropped || this.disabled) {\n      return;\n    }\n\n    setStyle(this.viewBoxImage, assign({\n      width: width,\n      height: height\n    }, getTransforms(assign({\n      translateX: -left,\n      translateY: -top\n    }, imageData))));\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      var originalWidth = data.width;\n      var originalHeight = data.height;\n      var newWidth = originalWidth;\n      var newHeight = originalHeight;\n      var ratio = 1;\n\n      if (cropBoxWidth) {\n        ratio = originalWidth / cropBoxWidth;\n        newHeight = cropBoxHeight * ratio;\n      }\n\n      if (cropBoxHeight && newHeight > originalHeight) {\n        ratio = originalHeight / cropBoxHeight;\n        newWidth = cropBoxWidth * ratio;\n        newHeight = originalHeight;\n      }\n\n      setStyle(element, {\n        width: newWidth,\n        height: newHeight\n      });\n      setStyle(element.getElementsByTagName('img')[0], assign({\n        width: width * ratio,\n        height: height * ratio\n      }, getTransforms(assign({\n        translateX: -left * ratio,\n        translateY: -top * ratio\n      }, imageData))));\n    });\n  }\n};\n\nvar events = {\n  bind: function bind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n    if (isFunction(options.cropstart)) {\n      addListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      addListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      addListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      addListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      addListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n    if (options.zoomable && options.zoomOnWheel) {\n      addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n        passive: false,\n        capture: true\n      });\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n    }\n\n    addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n    addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n    if (options.responsive) {\n      addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n    }\n  },\n  unbind: function unbind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n    if (isFunction(options.cropstart)) {\n      removeListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      removeListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      removeListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      removeListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n    if (options.zoomable && options.zoomOnWheel) {\n      removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n        passive: false,\n        capture: true\n      });\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n    }\n\n    removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n    removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n    if (options.responsive) {\n      removeListener(window, EVENT_RESIZE, this.onResize);\n    }\n  }\n};\n\nvar handlers = {\n  resize: function resize() {\n    if (this.disabled) {\n      return;\n    }\n\n    var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n    var ratioX = container.offsetWidth / containerData.width;\n    var ratioY = container.offsetHeight / containerData.height;\n    var ratio = Math.abs(ratioX - 1) > Math.abs(ratioY - 1) ? ratioX : ratioY; // Resize when width changed or height changed\n\n    if (ratio !== 1) {\n      var canvasData;\n      var cropBoxData;\n\n      if (options.restore) {\n        canvasData = this.getCanvasData();\n        cropBoxData = this.getCropBoxData();\n      }\n\n      this.render();\n\n      if (options.restore) {\n        this.setCanvasData(forEach(canvasData, function (n, i) {\n          canvasData[i] = n * ratio;\n        }));\n        this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n          cropBoxData[i] = n * ratio;\n        }));\n      }\n    }\n  },\n  dblclick: function dblclick() {\n    if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n      return;\n    }\n\n    this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n  },\n  wheel: function wheel(event) {\n    var _this = this;\n\n    var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n    var delta = 1;\n\n    if (this.disabled) {\n      return;\n    }\n\n    event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n    if (this.wheeling) {\n      return;\n    }\n\n    this.wheeling = true;\n    setTimeout(function () {\n      _this.wheeling = false;\n    }, 50);\n\n    if (event.deltaY) {\n      delta = event.deltaY > 0 ? 1 : -1;\n    } else if (event.wheelDelta) {\n      delta = -event.wheelDelta / 120;\n    } else if (event.detail) {\n      delta = event.detail > 0 ? 1 : -1;\n    }\n\n    this.zoom(-delta * ratio, event);\n  },\n  cropStart: function cropStart(event) {\n    var buttons = event.buttons,\n        button = event.button;\n\n    if (this.disabled // Handle mouse event and pointer event and ignore touch event\n    || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && ( // No primary button (Usually the left button)\n    isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n    || event.ctrlKey)) {\n      return;\n    }\n\n    var options = this.options,\n        pointers = this.pointers;\n    var action;\n\n    if (event.changedTouches) {\n      // Handle touch event\n      forEach(event.changedTouches, function (touch) {\n        pointers[touch.identifier] = getPointer(touch);\n      });\n    } else {\n      // Handle mouse event and pointer event\n      pointers[event.pointerId || 0] = getPointer(event);\n    }\n\n    if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n      action = ACTION_ZOOM;\n    } else {\n      action = getData(event.target, DATA_ACTION);\n    }\n\n    if (!REGEXP_ACTIONS.test(action)) {\n      return;\n    }\n\n    if (dispatchEvent(this.element, EVENT_CROP_START, {\n      originalEvent: event,\n      action: action\n    }) === false) {\n      return;\n    } // This line is required for preventing page zooming in iOS browsers\n\n\n    event.preventDefault();\n    this.action = action;\n    this.cropping = false;\n\n    if (action === ACTION_CROP) {\n      this.cropping = true;\n      addClass(this.dragBox, CLASS_MODAL);\n    }\n  },\n  cropMove: function cropMove(event) {\n    var action = this.action;\n\n    if (this.disabled || !action) {\n      return;\n    }\n\n    var pointers = this.pointers;\n    event.preventDefault();\n\n    if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n      originalEvent: event,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    if (event.changedTouches) {\n      forEach(event.changedTouches, function (touch) {\n        // The first parameter should not be undefined (#432)\n        assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n      });\n    } else {\n      assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n    }\n\n    this.change(event);\n  },\n  cropEnd: function cropEnd(event) {\n    if (this.disabled) {\n      return;\n    }\n\n    var action = this.action,\n        pointers = this.pointers;\n\n    if (event.changedTouches) {\n      forEach(event.changedTouches, function (touch) {\n        delete pointers[touch.identifier];\n      });\n    } else {\n      delete pointers[event.pointerId || 0];\n    }\n\n    if (!action) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (!Object.keys(pointers).length) {\n      this.action = '';\n    }\n\n    if (this.cropping) {\n      this.cropping = false;\n      toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n    }\n\n    dispatchEvent(this.element, EVENT_CROP_END, {\n      originalEvent: event,\n      action: action\n    });\n  }\n};\n\nvar change = {\n  change: function change(event) {\n    var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n    var action = this.action;\n    var aspectRatio = options.aspectRatio;\n    var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n    var right = left + width;\n    var bottom = top + height;\n    var minLeft = 0;\n    var minTop = 0;\n    var maxWidth = containerData.width;\n    var maxHeight = containerData.height;\n    var renderable = true;\n    var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n    if (!aspectRatio && event.shiftKey) {\n      aspectRatio = width && height ? width / height : 1;\n    }\n\n    if (this.limited) {\n      minLeft = cropBoxData.minLeft;\n      minTop = cropBoxData.minTop;\n      maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n      maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n    }\n\n    var pointer = pointers[Object.keys(pointers)[0]];\n    var range = {\n      x: pointer.endX - pointer.startX,\n      y: pointer.endY - pointer.startY\n    };\n\n    var check = function check(side) {\n      switch (side) {\n        case ACTION_EAST:\n          if (right + range.x > maxWidth) {\n            range.x = maxWidth - right;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (left + range.x < minLeft) {\n            range.x = minLeft - left;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (top + range.y < minTop) {\n            range.y = minTop - top;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (bottom + range.y > maxHeight) {\n            range.y = maxHeight - bottom;\n          }\n\n          break;\n      }\n    };\n\n    switch (action) {\n      // Move crop box\n      case ACTION_ALL:\n        left += range.x;\n        top += range.y;\n        break;\n      // Resize crop box\n\n      case ACTION_EAST:\n        if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_EAST);\n        width += range.x;\n\n        if (width < 0) {\n          action = ACTION_WEST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH:\n        if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_NORTH);\n        height -= range.y;\n        top += range.y;\n\n        if (height < 0) {\n          action = ACTION_SOUTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_WEST:\n        if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_WEST);\n        width -= range.x;\n        left += range.x;\n\n        if (width < 0) {\n          action = ACTION_EAST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_SOUTH:\n        if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_SOUTH);\n        height += range.y;\n\n        if (height < 0) {\n          action = ACTION_NORTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH_EAST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_NORTH_WEST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n          left += cropBoxData.width - width;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_WEST:\n        if (aspectRatio) {\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_EAST:\n        if (aspectRatio) {\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n      // Move canvas\n\n      case ACTION_MOVE:\n        this.move(range.x, range.y);\n        renderable = false;\n        break;\n      // Zoom canvas\n\n      case ACTION_ZOOM:\n        this.zoom(getMaxZoomRatio(pointers), event);\n        renderable = false;\n        break;\n      // Create crop box\n\n      case ACTION_CROP:\n        if (!range.x || !range.y) {\n          renderable = false;\n          break;\n        }\n\n        offset = getOffset(this.cropper);\n        left = pointer.startX - offset.left;\n        top = pointer.startY - offset.top;\n        width = cropBoxData.minWidth;\n        height = cropBoxData.minHeight;\n\n        if (range.x > 0) {\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n        } else if (range.x < 0) {\n          left -= width;\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n        }\n\n        if (range.y < 0) {\n          top -= height;\n        } // Show the crop box if is hidden\n\n\n        if (!this.cropped) {\n          removeClass(this.cropBox, CLASS_HIDDEN);\n          this.cropped = true;\n\n          if (this.limited) {\n            this.limitCropBox(true, true);\n          }\n        }\n\n        break;\n    }\n\n    if (renderable) {\n      cropBoxData.width = width;\n      cropBoxData.height = height;\n      cropBoxData.left = left;\n      cropBoxData.top = top;\n      this.action = action;\n      this.renderCropBox();\n    } // Override\n\n\n    forEach(pointers, function (p) {\n      p.startX = p.endX;\n      p.startY = p.endY;\n    });\n  }\n};\n\nvar methods = {\n  // Show the crop box manually\n  crop: function crop() {\n    if (this.ready && !this.cropped && !this.disabled) {\n      this.cropped = true;\n      this.limitCropBox(true, true);\n\n      if (this.options.modal) {\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n\n      removeClass(this.cropBox, CLASS_HIDDEN);\n      this.setCropBoxData(this.initialCropBoxData);\n    }\n\n    return this;\n  },\n  // Reset the image and crop box to their initial states\n  reset: function reset() {\n    if (this.ready && !this.disabled) {\n      this.imageData = assign({}, this.initialImageData);\n      this.canvasData = assign({}, this.initialCanvasData);\n      this.cropBoxData = assign({}, this.initialCropBoxData);\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    }\n\n    return this;\n  },\n  // Clear the crop box\n  clear: function clear() {\n    if (this.cropped && !this.disabled) {\n      assign(this.cropBoxData, {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      });\n      this.cropped = false;\n      this.renderCropBox();\n      this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n      this.renderCanvas();\n      removeClass(this.dragBox, CLASS_MODAL);\n      addClass(this.cropBox, CLASS_HIDDEN);\n    }\n\n    return this;\n  },\n\n  /**\n   * Replace the image's src and rebuild the cropper\n   * @param {string} url - The new URL.\n   * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n   * @returns {Cropper} this\n   */\n  replace: function replace(url) {\n    var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!this.disabled && url) {\n      if (this.isImg) {\n        this.element.src = url;\n      }\n\n      if (hasSameSize) {\n        this.url = url;\n        this.image.src = url;\n\n        if (this.ready) {\n          this.viewBoxImage.src = url;\n          forEach(this.previews, function (element) {\n            element.getElementsByTagName('img')[0].src = url;\n          });\n        }\n      } else {\n        if (this.isImg) {\n          this.replaced = true;\n        }\n\n        this.options.data = null;\n        this.uncreate();\n        this.load(url);\n      }\n    }\n\n    return this;\n  },\n  // Enable (unfreeze) the cropper\n  enable: function enable() {\n    if (this.ready && this.disabled) {\n      this.disabled = false;\n      removeClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n  // Disable (freeze) the cropper\n  disable: function disable() {\n    if (this.ready && !this.disabled) {\n      this.disabled = true;\n      addClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n  /**\n   * Destroy the cropper and remove the instance from the image\n   * @returns {Cropper} this\n   */\n  destroy: function destroy() {\n    var element = this.element;\n\n    if (!element[NAMESPACE]) {\n      return this;\n    }\n\n    element[NAMESPACE] = undefined;\n\n    if (this.isImg && this.replaced) {\n      element.src = this.originalUrl;\n    }\n\n    this.uncreate();\n    return this;\n  },\n\n  /**\n   * Move the canvas with relative offsets\n   * @param {number} offsetX - The relative offset distance on the x-axis.\n   * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n   * @returns {Cropper} this\n   */\n  move: function move(offsetX) {\n    var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n    var _this$canvasData = this.canvasData,\n        left = _this$canvasData.left,\n        top = _this$canvasData.top;\n    return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n  },\n\n  /**\n   * Move the canvas to an absolute point\n   * @param {number} x - The x-axis coordinate.\n   * @param {number} [y=x] - The y-axis coordinate.\n   * @returns {Cropper} this\n   */\n  moveTo: function moveTo(x) {\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n    var canvasData = this.canvasData;\n    var changed = false;\n    x = Number(x);\n    y = Number(y);\n\n    if (this.ready && !this.disabled && this.options.movable) {\n      if (isNumber(x)) {\n        canvasData.left = x;\n        changed = true;\n      }\n\n      if (isNumber(y)) {\n        canvasData.top = y;\n        changed = true;\n      }\n\n      if (changed) {\n        this.renderCanvas(true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Zoom the canvas with a relative ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoom: function zoom(ratio, _originalEvent) {\n    var canvasData = this.canvasData;\n    ratio = Number(ratio);\n\n    if (ratio < 0) {\n      ratio = 1 / (1 - ratio);\n    } else {\n      ratio = 1 + ratio;\n    }\n\n    return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n  },\n\n  /**\n   * Zoom the canvas to an absolute ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Object} pivot - The zoom pivot point coordinate.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n    ratio = Number(ratio);\n\n    if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n      var newWidth = naturalWidth * ratio;\n      var newHeight = naturalHeight * ratio;\n\n      if (dispatchEvent(this.element, EVENT_ZOOM, {\n        ratio: ratio,\n        oldRatio: width / naturalWidth,\n        originalEvent: _originalEvent\n      }) === false) {\n        return this;\n      }\n\n      if (_originalEvent) {\n        var pointers = this.pointers;\n        var offset = getOffset(this.cropper);\n        var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n          pageX: _originalEvent.pageX,\n          pageY: _originalEvent.pageY\n        }; // Zoom from the triggering point of the event\n\n        canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n      } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n        canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n      } else {\n        // Zoom from the center of the canvas\n        canvasData.left -= (newWidth - width) / 2;\n        canvasData.top -= (newHeight - height) / 2;\n      }\n\n      canvasData.width = newWidth;\n      canvasData.height = newHeight;\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Rotate the canvas with a relative degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotate: function rotate(degree) {\n    return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n  },\n\n  /**\n   * Rotate the canvas to an absolute degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotateTo: function rotateTo(degree) {\n    degree = Number(degree);\n\n    if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n      this.imageData.rotate = degree % 360;\n      this.renderCanvas(true, true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Scale the image on the x-axis.\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @returns {Cropper} this\n   */\n  scaleX: function scaleX(_scaleX) {\n    var scaleY = this.imageData.scaleY;\n    return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n  },\n\n  /**\n   * Scale the image on the y-axis.\n   * @param {number} scaleY - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scaleY: function scaleY(_scaleY) {\n    var scaleX = this.imageData.scaleX;\n    return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n  },\n\n  /**\n   * Scale the image\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scale: function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n    var imageData = this.imageData;\n    var transformed = false;\n    scaleX = Number(scaleX);\n    scaleY = Number(scaleY);\n\n    if (this.ready && !this.disabled && this.options.scalable) {\n      if (isNumber(scaleX)) {\n        imageData.scaleX = scaleX;\n        transformed = true;\n      }\n\n      if (isNumber(scaleY)) {\n        imageData.scaleY = scaleY;\n        transformed = true;\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the cropped area position and size data (base on the original image)\n   * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n   * @returns {Object} The result cropped data.\n   */\n  getData: function getData() {\n    var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        x: cropBoxData.left - canvasData.left,\n        y: cropBoxData.top - canvasData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n      var ratio = imageData.width / imageData.naturalWidth;\n      forEach(data, function (n, i) {\n        data[i] = n / ratio;\n      });\n\n      if (rounded) {\n        // In case rounding off leads to extra 1px in right or bottom border\n        // we should round the top-left corner and the dimension (#343).\n        var bottom = Math.round(data.y + data.height);\n        var right = Math.round(data.x + data.width);\n        data.x = Math.round(data.x);\n        data.y = Math.round(data.y);\n        data.width = right - data.x;\n        data.height = bottom - data.y;\n      }\n    } else {\n      data = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (options.rotatable) {\n      data.rotate = imageData.rotate || 0;\n    }\n\n    if (options.scalable) {\n      data.scaleX = imageData.scaleX || 1;\n      data.scaleY = imageData.scaleY || 1;\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the cropped area position and size with new data\n   * @param {Object} data - The new data.\n   * @returns {Cropper} this\n   */\n  setData: function setData(data) {\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n    var cropBoxData = {};\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      var transformed = false;\n\n      if (options.rotatable) {\n        if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n          imageData.rotate = data.rotate;\n          transformed = true;\n        }\n      }\n\n      if (options.scalable) {\n        if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n          imageData.scaleX = data.scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n          imageData.scaleY = data.scaleY;\n          transformed = true;\n        }\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      if (isNumber(data.x)) {\n        cropBoxData.left = data.x * ratio + canvasData.left;\n      }\n\n      if (isNumber(data.y)) {\n        cropBoxData.top = data.y * ratio + canvasData.top;\n      }\n\n      if (isNumber(data.width)) {\n        cropBoxData.width = data.width * ratio;\n      }\n\n      if (isNumber(data.height)) {\n        cropBoxData.height = data.height * ratio;\n      }\n\n      this.setCropBoxData(cropBoxData);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the container size data.\n   * @returns {Object} The result container data.\n   */\n  getContainerData: function getContainerData() {\n    return this.ready ? assign({}, this.containerData) : {};\n  },\n\n  /**\n   * Get the image position and size data.\n   * @returns {Object} The result image data.\n   */\n  getImageData: function getImageData() {\n    return this.sized ? assign({}, this.imageData) : {};\n  },\n\n  /**\n   * Get the canvas position and size data.\n   * @returns {Object} The result canvas data.\n   */\n  getCanvasData: function getCanvasData() {\n    var canvasData = this.canvasData;\n    var data = {};\n\n    if (this.ready) {\n      forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n        data[n] = canvasData[n];\n      });\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the canvas position and size with new data.\n   * @param {Object} data - The new canvas data.\n   * @returns {Cropper} this\n   */\n  setCanvasData: function setCanvasData(data) {\n    var canvasData = this.canvasData;\n    var aspectRatio = canvasData.aspectRatio;\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        canvasData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        canvasData.top = data.top;\n      }\n\n      if (isNumber(data.width)) {\n        canvasData.width = data.width;\n        canvasData.height = data.width / aspectRatio;\n      } else if (isNumber(data.height)) {\n        canvasData.height = data.height;\n        canvasData.width = data.height * aspectRatio;\n      }\n\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the crop box position and size data.\n   * @returns {Object} The result crop box data.\n   */\n  getCropBoxData: function getCropBoxData() {\n    var cropBoxData = this.cropBoxData;\n    var data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        left: cropBoxData.left,\n        top: cropBoxData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n    }\n\n    return data || {};\n  },\n\n  /**\n   * Set the crop box position and size with new data.\n   * @param {Object} data - The new crop box data.\n   * @returns {Cropper} this\n   */\n  setCropBoxData: function setCropBoxData(data) {\n    var cropBoxData = this.cropBoxData;\n    var aspectRatio = this.options.aspectRatio;\n    var widthChanged;\n    var heightChanged;\n\n    if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        cropBoxData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        cropBoxData.top = data.top;\n      }\n\n      if (isNumber(data.width) && data.width !== cropBoxData.width) {\n        widthChanged = true;\n        cropBoxData.width = data.width;\n      }\n\n      if (isNumber(data.height) && data.height !== cropBoxData.height) {\n        heightChanged = true;\n        cropBoxData.height = data.height;\n      }\n\n      if (aspectRatio) {\n        if (widthChanged) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else if (heightChanged) {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.renderCropBox();\n    }\n\n    return this;\n  },\n\n  /**\n   * Get a canvas drawn the cropped image.\n   * @param {Object} [options={}] - The config options.\n   * @returns {HTMLCanvasElement} - The result canvas.\n   */\n  getCroppedCanvas: function getCroppedCanvas() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!this.ready || !window.HTMLCanvasElement) {\n      return null;\n    }\n\n    var canvasData = this.canvasData;\n    var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n    if (!this.cropped) {\n      return source;\n    }\n\n    var _this$getData = this.getData(),\n        initialX = _this$getData.x,\n        initialY = _this$getData.y,\n        initialWidth = _this$getData.width,\n        initialHeight = _this$getData.height;\n\n    var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n    if (ratio !== 1) {\n      initialX *= ratio;\n      initialY *= ratio;\n      initialWidth *= ratio;\n      initialHeight *= ratio;\n    }\n\n    var aspectRatio = initialWidth / initialHeight;\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.maxWidth || Infinity,\n      height: options.maxHeight || Infinity\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.minWidth || 0,\n      height: options.minHeight || 0\n    }, 'cover');\n\n    var _getAdjustedSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.width || (ratio !== 1 ? source.width : initialWidth),\n      height: options.height || (ratio !== 1 ? source.height : initialHeight)\n    }),\n        width = _getAdjustedSizes.width,\n        height = _getAdjustedSizes.height;\n\n    width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n    height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = options.fillColor || 'transparent';\n    context.fillRect(0, 0, width, height);\n    var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    if (imageSmoothingQuality) {\n      context.imageSmoothingQuality = imageSmoothingQuality;\n    } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n    var sourceWidth = source.width;\n    var sourceHeight = source.height; // Source canvas parameters\n\n    var srcX = initialX;\n    var srcY = initialY;\n    var srcWidth;\n    var srcHeight; // Destination canvas parameters\n\n    var dstX;\n    var dstY;\n    var dstWidth;\n    var dstHeight;\n\n    if (srcX <= -initialWidth || srcX > sourceWidth) {\n      srcX = 0;\n      srcWidth = 0;\n      dstX = 0;\n      dstWidth = 0;\n    } else if (srcX <= 0) {\n      dstX = -srcX;\n      srcX = 0;\n      srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n      dstWidth = srcWidth;\n    } else if (srcX <= sourceWidth) {\n      dstX = 0;\n      srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n      dstWidth = srcWidth;\n    }\n\n    if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n      srcY = 0;\n      srcHeight = 0;\n      dstY = 0;\n      dstHeight = 0;\n    } else if (srcY <= 0) {\n      dstY = -srcY;\n      srcY = 0;\n      srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n      dstHeight = srcHeight;\n    } else if (srcY <= sourceHeight) {\n      dstY = 0;\n      srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n      dstHeight = srcHeight;\n    }\n\n    var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n    if (dstWidth > 0 && dstHeight > 0) {\n      var scale = width / initialWidth;\n      params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n    } // All the numerical parameters should be integer for `drawImage`\n    // https://github.com/fengyuanchen/cropper/issues/476\n\n\n    context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    return canvas;\n  },\n\n  /**\n   * Change the aspect ratio of the crop box.\n   * @param {number} aspectRatio - The new aspect ratio.\n   * @returns {Cropper} this\n   */\n  setAspectRatio: function setAspectRatio(aspectRatio) {\n    var options = this.options;\n\n    if (!this.disabled && !isUndefined(aspectRatio)) {\n      // 0 -> NaN\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n      if (this.ready) {\n        this.initCropBox();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Change the drag mode.\n   * @param {string} mode - The new drag mode.\n   * @returns {Cropper} this\n   */\n  setDragMode: function setDragMode(mode) {\n    var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n\n    if (this.ready && !this.disabled) {\n      var croppable = mode === DRAG_MODE_CROP;\n      var movable = options.movable && mode === DRAG_MODE_MOVE;\n      mode = croppable || movable ? mode : DRAG_MODE_NONE;\n      options.dragMode = mode;\n      setData(dragBox, DATA_ACTION, mode);\n      toggleClass(dragBox, CLASS_CROP, croppable);\n      toggleClass(dragBox, CLASS_MOVE, movable);\n\n      if (!options.cropBoxMovable) {\n        // Sync drag mode to crop box when it is not movable\n        setData(face, DATA_ACTION, mode);\n        toggleClass(face, CLASS_CROP, croppable);\n        toggleClass(face, CLASS_MOVE, movable);\n      }\n    }\n\n    return this;\n  }\n};\n\nvar AnotherCropper = WINDOW.Cropper;\n\nvar Cropper = /*#__PURE__*/function () {\n  /**\n   * Create a new Cropper.\n   * @param {Element} element - The target element for cropping.\n   * @param {Object} [options={}] - The configuration options.\n   */\n  function Cropper(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Cropper);\n\n    if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n      throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n    }\n\n    this.element = element;\n    this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n    this.cropped = false;\n    this.disabled = false;\n    this.pointers = {};\n    this.ready = false;\n    this.reloading = false;\n    this.replaced = false;\n    this.sized = false;\n    this.sizing = false;\n    this.init();\n  }\n\n  _createClass(Cropper, [{\n    key: \"init\",\n    value: function init() {\n      var element = this.element;\n      var tagName = element.tagName.toLowerCase();\n      var url;\n\n      if (element[NAMESPACE]) {\n        return;\n      }\n\n      element[NAMESPACE] = this;\n\n      if (tagName === 'img') {\n        this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n        url = element.getAttribute('src') || '';\n        this.originalUrl = url; // Stop when it's a blank image\n\n        if (!url) {\n          return;\n        } // e.g.: \"https://example.com/img/picture.jpg\"\n\n\n        url = element.src;\n      } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n        url = element.toDataURL();\n      }\n\n      this.load(url);\n    }\n  }, {\n    key: \"load\",\n    value: function load(url) {\n      var _this = this;\n\n      if (!url) {\n        return;\n      }\n\n      this.url = url;\n      this.imageData = {};\n      var element = this.element,\n          options = this.options;\n\n      if (!options.rotatable && !options.scalable) {\n        options.checkOrientation = false;\n      } // Only IE10+ supports Typed Arrays\n\n\n      if (!options.checkOrientation || !window.ArrayBuffer) {\n        this.clone();\n        return;\n      } // Detect the mime type of the image directly if it is a Data URL\n\n\n      if (REGEXP_DATA_URL.test(url)) {\n        // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n        } else {\n          // Only a JPEG image may contains Exif Orientation information,\n          // the rest types of Data URLs are not necessary to check orientation at all.\n          this.clone();\n        }\n\n        return;\n      } // 1. Detect the mime type of the image by a XMLHttpRequest.\n      // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n      var xhr = new XMLHttpRequest();\n      var clone = this.clone.bind(this);\n      this.reloading = true;\n      this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n      // http, https, data, chrome, chrome-extension.\n      // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n      // in some browsers as IE11 and Safari.\n\n      xhr.onabort = clone;\n      xhr.onerror = clone;\n      xhr.ontimeout = clone;\n\n      xhr.onprogress = function () {\n        // Abort the request directly if it not a JPEG image for better performance\n        if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n          xhr.abort();\n        }\n      };\n\n      xhr.onload = function () {\n        _this.read(xhr.response);\n      };\n\n      xhr.onloadend = function () {\n        _this.reloading = false;\n        _this.xhr = null;\n      }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n      if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n        url = addTimestamp(url);\n      } // The third parameter is required for avoiding side-effect (#682)\n\n\n      xhr.open('GET', url, true);\n      xhr.responseType = 'arraybuffer';\n      xhr.withCredentials = element.crossOrigin === 'use-credentials';\n      xhr.send();\n    }\n  }, {\n    key: \"read\",\n    value: function read(arrayBuffer) {\n      var options = this.options,\n          imageData = this.imageData; // Reset the orientation value to its default value 1\n      // as some iOS browsers will render image with its orientation\n\n      var orientation = resetAndGetOrientation(arrayBuffer);\n      var rotate = 0;\n      var scaleX = 1;\n      var scaleY = 1;\n\n      if (orientation > 1) {\n        // Generate a new URL which has the default orientation value\n        this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n        var _parseOrientation = parseOrientation(orientation);\n\n        rotate = _parseOrientation.rotate;\n        scaleX = _parseOrientation.scaleX;\n        scaleY = _parseOrientation.scaleY;\n      }\n\n      if (options.rotatable) {\n        imageData.rotate = rotate;\n      }\n\n      if (options.scalable) {\n        imageData.scaleX = scaleX;\n        imageData.scaleY = scaleY;\n      }\n\n      this.clone();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var element = this.element,\n          url = this.url;\n      var crossOrigin = element.crossOrigin;\n      var crossOriginUrl = url;\n\n      if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n        if (!crossOrigin) {\n          crossOrigin = 'anonymous';\n        } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n        crossOriginUrl = addTimestamp(url);\n      }\n\n      this.crossOrigin = crossOrigin;\n      this.crossOriginUrl = crossOriginUrl;\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = crossOriginUrl || url;\n      image.alt = element.alt || 'The image to crop';\n      this.image = image;\n      image.onload = this.start.bind(this);\n      image.onerror = this.stop.bind(this);\n      addClass(image, CLASS_HIDE);\n      element.parentNode.insertBefore(image, element.nextSibling);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      var image = this.image;\n      image.onload = null;\n      image.onerror = null;\n      this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n      // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n      var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n      var done = function done(naturalWidth, naturalHeight) {\n        assign(_this2.imageData, {\n          naturalWidth: naturalWidth,\n          naturalHeight: naturalHeight,\n          aspectRatio: naturalWidth / naturalHeight\n        });\n        _this2.initialImageData = assign({}, _this2.imageData);\n        _this2.sizing = false;\n        _this2.sized = true;\n\n        _this2.build();\n      }; // Most modern browsers (excepts iOS WebKit)\n\n\n      if (image.naturalWidth && !isIOSWebKit) {\n        done(image.naturalWidth, image.naturalHeight);\n        return;\n      }\n\n      var sizingImage = document.createElement('img');\n      var body = document.body || document.documentElement;\n      this.sizingImage = sizingImage;\n\n      sizingImage.onload = function () {\n        done(sizingImage.width, sizingImage.height);\n\n        if (!isIOSWebKit) {\n          body.removeChild(sizingImage);\n        }\n      };\n\n      sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n      // with its orientation once append it into DOM (#279)\n\n      if (!isIOSWebKit) {\n        sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n        body.appendChild(sizingImage);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var image = this.image;\n      image.onload = null;\n      image.onerror = null;\n      image.parentNode.removeChild(image);\n      this.image = null;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      if (!this.sized || this.ready) {\n        return;\n      }\n\n      var element = this.element,\n          options = this.options,\n          image = this.image; // Create cropper elements\n\n      var container = element.parentNode;\n      var template = document.createElement('div');\n      template.innerHTML = TEMPLATE;\n      var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n      var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n      var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n      var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n      var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n      this.container = container;\n      this.cropper = cropper;\n      this.canvas = canvas;\n      this.dragBox = dragBox;\n      this.cropBox = cropBox;\n      this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n      this.face = face;\n      canvas.appendChild(image); // Hide the original image\n\n      addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n      container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n      if (!this.isImg) {\n        removeClass(image, CLASS_HIDE);\n      }\n\n      this.initPreview();\n      this.bind();\n      options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n      options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n      options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n      addClass(cropBox, CLASS_HIDDEN);\n\n      if (!options.guides) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n      }\n\n      if (!options.center) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n      }\n\n      if (options.background) {\n        addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n      }\n\n      if (!options.highlight) {\n        addClass(face, CLASS_INVISIBLE);\n      }\n\n      if (options.cropBoxMovable) {\n        addClass(face, CLASS_MOVE);\n        setData(face, DATA_ACTION, ACTION_ALL);\n      }\n\n      if (!options.cropBoxResizable) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n      }\n\n      this.render();\n      this.ready = true;\n      this.setDragMode(options.dragMode);\n\n      if (options.autoCrop) {\n        this.crop();\n      }\n\n      this.setData(options.data);\n\n      if (isFunction(options.ready)) {\n        addListener(element, EVENT_READY, options.ready, {\n          once: true\n        });\n      }\n\n      dispatchEvent(element, EVENT_READY);\n    }\n  }, {\n    key: \"unbuild\",\n    value: function unbuild() {\n      if (!this.ready) {\n        return;\n      }\n\n      this.ready = false;\n      this.unbind();\n      this.resetPreview();\n      this.cropper.parentNode.removeChild(this.cropper);\n      removeClass(this.element, CLASS_HIDDEN);\n    }\n  }, {\n    key: \"uncreate\",\n    value: function uncreate() {\n      if (this.ready) {\n        this.unbuild();\n        this.ready = false;\n        this.cropped = false;\n      } else if (this.sizing) {\n        this.sizingImage.onload = null;\n        this.sizing = false;\n        this.sized = false;\n      } else if (this.reloading) {\n        this.xhr.onabort = null;\n        this.xhr.abort();\n      } else if (this.image) {\n        this.stop();\n      }\n    }\n    /**\n     * Get the no conflict cropper class.\n     * @returns {Cropper} The cropper class.\n     */\n\n  }], [{\n    key: \"noConflict\",\n    value: function noConflict() {\n      window.Cropper = AnotherCropper;\n      return Cropper;\n    }\n    /**\n     * Change the default options.\n     * @param {Object} options - The new default options.\n     */\n\n  }, {\n    key: \"setDefaults\",\n    value: function setDefaults(options) {\n      assign(DEFAULTS, isPlainObject(options) && options);\n    }\n  }]);\n\n  return Cropper;\n}();\n\nassign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\nexport default Cropper;\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","<script lang=\"ts\">\n\timport { createEventDispatcher, onMount } from \"svelte\";\n\timport { Camera, Circle, Square } from \"@gradio/icons\";\n\n\tlet video_source: HTMLVideoElement;\n\tlet canvas: HTMLCanvasElement;\n\texport let streaming: boolean = false;\n\texport let pending: boolean = false;\n\n\texport let mode: \"image\" | \"video\" = \"image\";\n\texport let mirror_webcam: boolean;\n\texport let include_audio: boolean;\n\n\tconst dispatch = createEventDispatcher();\n\n\tonMount(() => (canvas = document.createElement(\"canvas\")));\n\n\tasync function access_webcam() {\n\t\ttry {\n\t\t\tstream = await navigator.mediaDevices.getUserMedia({\n\t\t\t\tvideo: true,\n\t\t\t\taudio: include_audio\n\t\t\t});\n\t\t\tvideo_source.srcObject = stream;\n\t\t\tvideo_source.muted = true;\n\t\t\tvideo_source.play();\n\t\t} catch (err) {\n\t\t\tif (err instanceof DOMException && err.name == \"NotAllowedError\") {\n\t\t\t\tdispatch(\"error\", \"Please allow access to the webcam for recording.\");\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction take_picture() {\n\t\tvar context = canvas.getContext(\"2d\")!;\n\n\t\tif (video_source.videoWidth && video_source.videoHeight) {\n\t\t\tcanvas.width = video_source.videoWidth;\n\t\t\tcanvas.height = video_source.videoHeight;\n\t\t\tcontext.drawImage(\n\t\t\t\tvideo_source,\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\tvideo_source.videoWidth,\n\t\t\t\tvideo_source.videoHeight\n\t\t\t);\n\n\t\t\tvar data = canvas.toDataURL(\"image/png\");\n\t\t\tdispatch(streaming ? \"stream\" : \"capture\", data);\n\t\t}\n\t}\n\n\tlet recording = false;\n\tlet recorded_blobs: BlobPart[] = [];\n\tlet stream: MediaStream;\n\tlet mimeType: string;\n\tlet media_recorder: MediaRecorder;\n\n\tfunction take_recording() {\n\t\tif (recording) {\n\t\t\tmedia_recorder.stop();\n\t\t\tlet video_blob = new Blob(recorded_blobs, { type: mimeType });\n\t\t\tlet ReaderObj = new FileReader();\n\t\t\tReaderObj.onload = function (e) {\n\t\t\t\tif (e.target) {\n\t\t\t\t\tdispatch(\"capture\", {\n\t\t\t\t\t\tdata: e.target.result,\n\t\t\t\t\t\tname: \"sample.\" + mimeType.substring(6),\n\t\t\t\t\t\tis_example: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tReaderObj.readAsDataURL(video_blob);\n\t\t} else {\n\t\t\trecorded_blobs = [];\n\t\t\tlet validMimeTypes = [\"video/webm\", \"video/mp4\"];\n\t\t\tfor (let validMimeType of validMimeTypes) {\n\t\t\t\tif (MediaRecorder.isTypeSupported(validMimeType)) {\n\t\t\t\t\tmimeType = validMimeType;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (mimeType === null) {\n\t\t\t\tconsole.error(\"No supported MediaRecorder mimeType\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmedia_recorder = new MediaRecorder(stream, {\n\t\t\t\tmimeType: mimeType\n\t\t\t});\n\t\t\tmedia_recorder.addEventListener(\"dataavailable\", function (e) {\n\t\t\t\trecorded_blobs.push(e.data);\n\t\t\t});\n\t\t\tmedia_recorder.start(200);\n\t\t}\n\t\trecording = !recording;\n\t}\n\n\taccess_webcam();\n\n\tif (streaming && mode === \"image\") {\n\t\twindow.setInterval(() => {\n\t\t\tif (video_source && !pending) {\n\t\t\t\ttake_picture();\n\t\t\t}\n\t\t}, 500);\n\t}\n</script>\n\n<div class=\"h-full min-h-[15rem] w-full relative\">\n\t<!-- svelte-ignore a11y-media-has-caption -->\n\t<video\n\t\tbind:this={video_source}\n\t\tclass=\"h-full w-full \"\n\t\tclass:scale-x-[-1]={mirror_webcam}\n\t/>\n\t{#if !streaming}\n\t\t<button\n\t\t\ton:click={mode === \"image\" ? take_picture : take_recording}\n\t\t\tclass=\"rounded-xl w-10 h-10 flex justify-center items-center absolute inset-x-0 bottom-2 md:bottom-4 xl:bottom-8 m-auto drop-shadow-lg bg-black/90\"\n\t\t>\n\t\t\t{#if mode === \"video\"}\n\t\t\t\t{#if recording}\n\t\t\t\t\t<div class=\"w-2/4 h-2/4 dark:text-white opacity-80\">\n\t\t\t\t\t\t<Square />\n\t\t\t\t\t</div>\n\t\t\t\t{:else}\n\t\t\t\t\t<div class=\"w-2/4 h-2/4 dark:text-white opacity-80\">\n\t\t\t\t\t\t<Circle />\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t{:else}\n\t\t\t\t<div class=\"w-2/4 h-2/4 text-white opacity-80\">\n\t\t\t\t\t<Camera />\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</button>\n\t{/if}\n</div>\n"],"names":[],"mappings":"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"}