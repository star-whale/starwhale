name: Python Client/SDK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  filter:
    runs-on: ubuntu-latest

    outputs:
      client: ${{ steps.filter.outputs.client }}

    steps:
      - uses: actions/checkout@v3
      - name: Check for python files changed
        uses: getsentry/paths-filter@v2
        id: filter
        with:
          base: main
          filters: .github/file-filter.yml

  codestyle:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"

    needs:
      - filter
    if: ${{ (github.event_name == 'pull_request' && needs.filter.outputs.client == 'true') || github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: ${{matrix.python-version}}
          architecture: "x64"

      - name: Get pip cache
        id: pip-cache-path
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        id: pip-cache
        with:
          path: ${{ steps.pip-cache-path.outputs.dir }}
          key: ${{ runner.os }}-codestyle-${{ hashFiles('client/requirements-dev.txt')}}

      - name: Install dependencies
        working-directory: ./client
        run: |
          make install-sw
          make install-dev-req

      - name: Black Format Check
        working-directory: ./client
        run: make ci-format-checker
      - name: Flake8 Lint Check
        working-directory: ./client
        run: make ci-lint
      - name: Mypy Type Check
        working-directory: ./client
        run: make ci-mypy
      - name: Python Import Check
        working-directory: ./client
        run: make ci-isort

  unittest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
    defaults:
      run:
        shell: bash

    needs:
      - filter
    if: ${{ (github.event_name == 'pull_request' && needs.filter.outputs.client == 'true') || github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: ${{matrix.python-version}}
          architecture: "x64"

      - name: Get pip cache
        id: pip-cache-path
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        id: pip-cache
        with:
          path: ${{ steps.pip-cache-path.outputs.dir }}
          key: ${{ runner.os }}-unittest-${{ hashFiles('client/requirements-dev.txt')}}

      - name: Install dependencies
        working-directory: ./client
        run: |
          make install-sw
          make install-dev-req

      - name: Run Unittest
        working-directory: ./client
        run: make ut

      - name: Publish coverage to Coveralls
        uses: AndreMiras/coveralls-python-action@v20201129
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel: true
          debug: true
          base-path: ./client
          flag-name: client-ut-coverage-python${{ matrix.python-version }}

  coveralls_finish:
    needs: unittest
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel-finished: true

  e2e:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
    defaults:
      run:
        shell: bash

    needs:
      - filter
    if: ${{ (github.event_name == 'pull_request' && needs.filter.outputs.client == 'true') || github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: ${{matrix.python-version}}
          architecture: "x64"

      - name: Get pip cache
        id: pip-cache-path
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        id: pip-cache
        with:
          path: ${{ steps.pip-cache-path.outputs.dir }}
          key: ${{ runner.os }}-e2e-${{ hashFiles('client/requirements-dev.txt')}}-${{ hashFiles('example/mnist/requirements.txt')}}

      - name: Run end to end test
        working-directory: .
        env:
          GITHUB_ACTION: 1
          PYTHON_VERSION: ${{matrix.python-version}}
        run: scripts/run_demo.sh
