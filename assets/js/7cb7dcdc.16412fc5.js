"use strict";(self.webpackChunkstarwhale_docs=self.webpackChunkstarwhale_docs||[]).push([[7107],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return k}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=p(a),k=r,h=u["".concat(d,".").concat(k)]||u[k]||s[k]||l;return a?n.createElement(h,i(i({ref:t},m),{},{components:a})):n.createElement(h,i({ref:t},m))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5933:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return i},default:function(){return s},frontMatter:function(){return l},metadata:function(){return o},toc:function(){return p}});var n=a(3117),r=(a(7294),a(3905));const l={title:"Helm Charts Installation"},i=void 0,o={unversionedId:"guides/install/helm-charts",id:"guides/install/helm-charts",title:"Helm Charts Installation",description:"1. Helm Charts",source:"@site/docs/guides/install/helm-charts.md",sourceDirName:"guides/install",slug:"/guides/install/helm-charts",permalink:"/docs/guides/install/helm-charts",draft:!1,editUrl:"https://github.com/star-whale/starwhale/tree/main/docs/docs/guides/install/helm-charts.md",tags:[],version:"current",frontMatter:{title:"Helm Charts Installation"},sidebar:"mainSidebar",previous:{title:"Standalone Installing",permalink:"/docs/guides/install/standalone"},next:{title:"Deploy Starwhale Controller with Docker",permalink:"/docs/guides/install/docker"}},d={},p=[{value:"1. Helm Charts",id:"1-helm-charts",level:2},{value:"2. TL; DR",id:"2-tl-dr",level:2},{value:"3. Prerequisites",id:"3-prerequisites",level:2},{value:"4. Installing the Chart",id:"4-installing-the-chart",level:2},{value:"5. Uninstalling the Chart",id:"5-uninstalling-the-chart",level:2},{value:"6. Upgrading the Chart",id:"6-upgrading-the-chart",level:2},{value:"7. Parameters",id:"7-parameters",level:2},{value:"7.1 Common parameters",id:"71-common-parameters",level:3},{value:"7.2 Starwhale controller parameters",id:"72-starwhale-controller-parameters",level:3},{value:"7.3 Infra parameters",id:"73-infra-parameters",level:3},{value:"7.4 dev mode",id:"74-dev-mode",level:3},{value:"7.5 ServiceAccount",id:"75-serviceaccount",level:3}],m={toc:p};function s(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"1-helm-charts"},"1. Helm Charts"),(0,r.kt)("p",null,"Starwhale is an MLOps platform. Starwhale Helm Charts help you deploy the whole platform in Kubernetes easily."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Easy to deploy, upgrade and maintain Starwhale controller and agent services."),(0,r.kt)("li",{parentName:"ul"},"Easy to deploy 3rd dependencies, such as minio and MySQL.")),(0,r.kt)("h2",{id:"2-tl-dr"},"2. TL; DR"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm repo add starwhale https://star-whale.github.io/charts\nhelm repo update\nhelm upgrade --install starwhale starwhale/starwhale -n starwhale --create-namespace\n")),(0,r.kt)("h2",{id:"3-prerequisites"},"3. Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Kubernetes 1.19+"),(0,r.kt)("li",{parentName:"ul"},"Helm 3.2.0+")),(0,r.kt)("h2",{id:"4-installing-the-chart"},"4. Installing the Chart"),(0,r.kt)("p",null,"To install the chart with the release name starwhale:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm repo add starwhale https://star-whale.github.io/charts\nhelm repo update\nhelm upgrade --install starwhale starwhale/starwhale -n starwhale --create-namespace\n")),(0,r.kt)("p",null,"We have offered a variety of installation modes in advance."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For minikube(all-in-one) and global network:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm pull starwhale/starwhale --untar --untardir ./charts\nhelm upgrade --install starwhale ./charts/starwhale -n starwhale --create-namespace -f ./charts/starwhale/values.minikube.global.yaml\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For minikube(all-in-one) and China's mainland network:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm pull starwhale/starwhale --untar --untardir ./charts\nhelm upgrade --install starwhale ./charts/starwhale -n starwhale --create-namespace -f ./charts/starwhale/values.minikube.cn.yaml\n")),(0,r.kt)("p",{parentName:"li"},"  ",(0,r.kt)("inlineCode",{parentName:"p"},"helm pull")," command will pull and untar the chart package, you can modify the values files for the deep customize."))),(0,r.kt)("p",null,"If you want to install the specified version, you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"--version")," argument. By default, the latest release version will be installed."),(0,r.kt)("h2",{id:"5-uninstalling-the-chart"},"5. Uninstalling the Chart"),(0,r.kt)("p",null,"To remove the starwhale deployment:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm delete starwhale\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"helm delete")," command will not delete the namespace, you can run ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl delete namespace starwhale")," to cleanup the namespace."),(0,r.kt)("h2",{id:"6-upgrading-the-chart"},"6. Upgrading the Chart"),(0,r.kt)("p",null,"To upgrade new chart version:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm repo update starwhale\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"update")," command will update the information of available charts locally from the Starwhale chart repository. You can get more version information from ",(0,r.kt)("a",{parentName:"p",href:"https://artifacthub.io/packages/helm/starwhale/starwhale"},"ArtifactHub"),"."),(0,r.kt)("h2",{id:"7-parameters"},"7. Parameters"),(0,r.kt)("h3",{id:"71-common-parameters"},"7.1 Common parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"image.registry")),(0,r.kt)("td",{parentName:"tr",align:null},"image registry, you can find Starwhale docker images in docker.io, ghcr.io and docker-registry.starwhale.cn."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ghcr.io"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"image.org")),(0,r.kt)("td",{parentName:"tr",align:null},"image registry org, ",(0,r.kt)("a",{parentName:"td",href:"https://hub.docker.com/u/starwhaleai"},"starwhaleai"),"(docker.io) or ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/orgs/star-whale"},"star-whale"),"(ghcr.io and docker-registry.starwhale.cn) or some custom org name in other registry."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"star-whale"))))),(0,r.kt)("h3",{id:"72-starwhale-controller-parameters"},"7.2 Starwhale controller parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"controller.auth.username")),(0,r.kt)("td",{parentName:"tr",align:null},"login username for console web"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"starwhale"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"controller.auth.password")),(0,r.kt)("td",{parentName:"tr",align:null},"login password for console web"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"abcd1234"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"controller.ingress.enabled")),(0,r.kt)("td",{parentName:"tr",align:null},"enable ingress for Starwhale controller"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"controller.ingress.ingressClassName")),(0,r.kt)("td",{parentName:"tr",align:null},"ingress class name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nginx"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"controller.ingress.host")),(0,r.kt)("td",{parentName:"tr",align:null},"Starwhale controller domain"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"console.pre.intra.starwhale.ai"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"controller.containerPort")),(0,r.kt)("td",{parentName:"tr",align:null},"Starwhale console web port"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"8082"))))),(0,r.kt)("h3",{id:"73-infra-parameters"},"7.3 Infra parameters"),(0,r.kt)("p",null,"Starwhale provides MySQL and minio infra charts, but the charts only support standalone mode for controller experiential, debugging and development, for example, minikube all-in-one scenario. In production, you should use external high available infra by the ",(0,r.kt)("inlineCode",{parentName:"p"},"externalMySQL")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"externalOSS")," parameters."),(0,r.kt)("p",null,"Standalone Infra for test scenario:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mysql.enabled")),(0,r.kt)("td",{parentName:"tr",align:null},"Deploy a standalone mysql instance with starwhale charts. pv/storageClass will be created automatically."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"minio.enabled")),(0,r.kt)("td",{parentName:"tr",align:null},"Deploy a standalone minio instance with starwhale charts. pv/storageClass will be created automatically."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"minio.ingress.enabled")),(0,r.kt)("td",{parentName:"tr",align:null},"enable ingress for minio admin web."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"minio.ingress.host")),(0,r.kt)("td",{parentName:"tr",align:null},"minio admin web domain"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"minio.pre.intra.starwhale.ai"))))),(0,r.kt)("p",null,"External Infra for production scenario:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"externalMySQL.host")),(0,r.kt)("td",{parentName:"tr",align:null},"When mysql.enabled is false, charts will use external mysql."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"localhost"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"externalMySQL.port")),(0,r.kt)("td",{parentName:"tr",align:null},"port for the external mysql"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"3306"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"externalMySQL.username")),(0,r.kt)("td",{parentName:"tr",align:null},"username for the external mysql"),(0,r.kt)("td",{parentName:"tr",align:null},"``")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"externalMySQL.password")),(0,r.kt)("td",{parentName:"tr",align:null},"password for the external mysql"),(0,r.kt)("td",{parentName:"tr",align:null},"``")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"externalMySQL.database")),(0,r.kt)("td",{parentName:"tr",align:null},"The System Admin should create a database for Starwhale in the external mysql."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"starwhale"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"externalOSS.host")),(0,r.kt)("td",{parentName:"tr",align:null},"When minio.enabled is false, charts will use the external OSS service."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"localhost"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"externalOSS.port")),(0,r.kt)("td",{parentName:"tr",align:null},"port for the external OSS service"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"9000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"externalOSS.accessKey")),(0,r.kt)("td",{parentName:"tr",align:null},"access key for the external OSS service"),(0,r.kt)("td",{parentName:"tr",align:null},"``")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"externalOSS.secretKey")),(0,r.kt)("td",{parentName:"tr",align:null},"secret key for the external OSS service"),(0,r.kt)("td",{parentName:"tr",align:null},"``")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"externalOSS.defaultBuckets")),(0,r.kt)("td",{parentName:"tr",align:null},"The System Admin should create a bucket for Starwhale in the external OSS service."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"starwhale"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"externalOSS.region")),(0,r.kt)("td",{parentName:"tr",align:null},"bucket's region for the external OSS service"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"local"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"externalOSS.type")),(0,r.kt)("td",{parentName:"tr",align:null},"Starwhale supports ",(0,r.kt)("inlineCode",{parentName:"td"},"s3"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"minio")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"aliyun")," OSS types."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"s3"))))),(0,r.kt)("h3",{id:"74-dev-mode"},"7.4 dev mode"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"devMode.createPV.enabled")),(0,r.kt)("td",{parentName:"tr",align:null},"enable auto create PV"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"devMode.createPV.host")),(0,r.kt)("td",{parentName:"tr",align:null},"Node selector matchExpressions in kubernetes.io/hostname"),(0,r.kt)("td",{parentName:"tr",align:null},'""')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"devMode.createPV.rootPath")),(0,r.kt)("td",{parentName:"tr",align:null},"Local path for test PV"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/var/starwhale"))))),(0,r.kt)("p",null,"Dev mode support creating local path PV automatically when devMode.createPV.enabled sets to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")),(0,r.kt)("p",null,"e.g."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm install starwhale . -n starwhale --create-namespace \\\n    --set devMode.createPV.enabled=true \\\n    --set devMode.createPV.host=pv-host \\\n    --set devMode.createPV.rootPath=/path/to/pv-storage\n")),(0,r.kt)("h3",{id:"75-serviceaccount"},"7.5 ServiceAccount"),(0,r.kt)("p",null,"Starwhale Controller can only work properly with ServiceAccount with sufficient permissions. The list of permissions required is as follows (take RBAC as an example):"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Resource"),(0,r.kt)("th",{parentName:"tr",align:null},"API Group"),(0,r.kt)("th",{parentName:"tr",align:null},"Get"),(0,r.kt)("th",{parentName:"tr",align:null},"List"),(0,r.kt)("th",{parentName:"tr",align:null},"Watch"),(0,r.kt)("th",{parentName:"tr",align:null},"Create"),(0,r.kt)("th",{parentName:"tr",align:null},"Delete"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"jobs"),(0,r.kt)("td",{parentName:"tr",align:null},"batch"),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pods"),(0,r.kt)("td",{parentName:"tr",align:null},"core"),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"nodes"),(0,r.kt)("td",{parentName:"tr",align:null},"core"),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"events"),(0,r.kt)("td",{parentName:"tr",align:null},'""'),(0,r.kt)("td",{parentName:"tr",align:null},"Y"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("p",null,"example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: test-role\nrules:\n- apiGroups:\n  - ""\n  resources:\n  - pods\n  - nodes\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - "batch"\n  resources:\n  - jobs\n  verbs:\n  - create\n  - get\n  - list\n  - watch\n  - delete\n- apiGroups:\n  - ""\n  resources:\n  - events\n  verbs:\n  - get\n  - watch\n  - list\n---\n\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: test-binding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: test-role\nsubjects:\n- kind: ServiceAccount\n  name: test-sa\n')))}s.isMDXComponent=!0}}]);