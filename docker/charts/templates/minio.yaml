{{- if and .Values.minio.enabled (ne .Values.controller.storageType "fs")}}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: minio
  namespace: {{ .Release.Namespace | quote }}
  labels: {{ include "chart.minio.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "chart.minio.labels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels: {{- include "chart.minio.labels" . | nindent 8 }}
    spec:
      initContainers:
        - name: volume-permissions
          image: "{{ .Values.minio.initImage }}"
          command:
            - /bin/bash
            - -ec
            - chown -R 1001:1001 /data
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: data
              mountPath: /data
      containers:
        - name: minio
          image: "{{ .Values.minio.image }}"
          volumeMounts:
            - mountPath: /data
              name: data
          securityContext:
            runAsUser: 1001
          env:
            - name: MINIO_SCHEME
              value: http
            - name: MINIO_FORCE_NEW_KEYS
              value: "no"
            - name: MINIO_DEFAULT_BUCKETS
              value: {{ .Values.minio.defaultBuckets }}
            - name: MINIO_ROOT_USER
              value: {{ .Values.minio.auth.rootUser }}
            - name: MINIO_ROOT_PASSWORD
              value: {{ .Values.minio.auth.rootPassword }}
            - name: MINIO_BROWSER
              value: "on"
          ports:
            - name: minio-api
              targetPort: {{ .Values.minio.ports.api }}
              containerPort: 9000
              protocol: TCP
            - name: minio-console
              targetPort: {{ .Values.minio.ports.console }}
              containerPort: 9001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: minio-api
              scheme: "HTTP"
          readinessProbe:
            tcpSocket:
              port: minio-api
          {{- if .Values.minio.resources }}
          resources: {{- toYaml .Values.minio.resources | nindent 12 }}
          {{- end }}
      securityContext:
        fsGroup: 1001
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "chart.minio.labels" . | nindent 4 }}
spec:
  type: "ClusterIP"
  ports:
    - name: minio-api
      port: {{ .Values.minio.ports.api }}
      targetPort: minio-api
    - name: minio-console
      port: {{ .Values.minio.ports.console }}
      targetPort: minio-console
  selector: {{ include "chart.minio.labels" . | nindent 4 }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "chart.minio.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ include "common.names.fullname" . }}-minio
  volumeMode: Filesystem
  volumeName: {{ include "common.names.fullname" . }}-pv-minio
  resources:
    requests:
      storage: {{ .Values.minio.persistence.size | quote }}
---
{{- if .Values.minio.ingress.enabled }}
apiVersion: {{ include "common.capabilities.ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: minio
  namespace: {{ .Release.Namespace | quote }}
  labels: {{ include "chart.minio.labels" . | nindent 4 }}
spec:
  ingressClassName: {{ .Values.minio.ingress.ingressClassName | quote }}
  rules:
  {{- if .Values.minikube }}
    - host: minio.{{ .Release.Namespace }}.svc
  {{- else }}
    - host: {{ .Values.minio.ingress.host }}
  {{- end}}
      http:
        paths:
          - backend:
              service:
                name: minio
                port:
                  name: minio-api
            path: /
            pathType: ImplementationSpecific
  {{- if .Values.minikube }}
    - host: minio-admin.{{ .Release.Namespace }}.svc
  {{- else }}
    - host: {{ .Values.minio.ingress.admin_host }}
  {{- end}}
      http:
        paths:
          - backend:
              service:
                name: minio-console
                port:
                  name: minio-console
            path: /
            pathType: ImplementationSpecific
{{- end}}
{{- end }}