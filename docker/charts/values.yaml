nameOverride: ""
fullnameOverride: ""
commonLabels: {}
commonAnnotations: {}

image:
  #registry: "docker.io"
  #org: "starwhaleai"
  registry: "ghcr.io"
  org: "star-whale"
  base:
    repo: "starwhale"
  server:
    repo: "server"
  pullPolicy: IfNotPresent

mysql:
  enabled: true
  architecture: standalone
  auth:
    rootPassword: root
    username: starwhale
    password: starwhale
    database: starwhale
  volumePermissions:
    enabled: true
  primary:
    service:
      port: 3306
    persistence:
      enabled: true
      # can not dynamically render when devMode.createPV=true
      # see: https://github.com/helm/helm/issues/2492
      storageClass: local-storage-mysql
      size: 8Gi
    resources:
      limits:
        cpu: 2000m
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 250Mi

externalMySQL:
  host: localhost
  port: 3306
  username: ""
  password: ""
  database: starwhale

nexus3:
  enabled: false
  nexusPort: 8081
  # ingress:
  #   hostname: nexus.pre.intra.starwhale.ai

# todo self define hostname
nexus-repository-manager:
  nexus:
    nexusPort: 8081
    # hostAliases:
    #   - nexus.pre.intra.starwhale.ai
    env:
      - name: NEXUS_SECURITY_RANDOMPASSWORD
        value: "false"
    resources:
      limits:
        cpu: 2000m
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 250Mi
  ingress:
    enabled: true
    # annotations:
    #   kubernetes.io/ingress.class: nginx
    #   hostname: nexus.pre.intra.starwhale.ai
    path: /
  persistence:
    enabled: true
    storageSize: 50Gi

minio:
  enabled: true
  containerPorts:
    api: 9000
    console: 9001
  ingress:
    enabled: true
    hostname: minio.pre.intra.starwhale.ai
    ingressClassName: nginx
  mode: standalone
  auth:
    rootUser: minioadmin
    rootPassword: minioadmin
  volumePermissions:
    enabled: true
  defaultBuckets: starwhale
  persistence:
    storageClass: local-storage-minio
    size: 50Gi
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 500m
      memory: 250Mi

externalS3OSS:
  host: localhost
  port: 9000
  accessKey: ""
  secretKey: ""
  defaultBuckets: starwhale
  region: "local"
  type: "s3" # supported type: s3, aliyun

controller:
  taskSplitSize: 2
  jwt:
    tokenExpireMinutes: 43200
  upload:
    maxFileSize: 20480MB
  auth:
    username: starwhale
    password: abcd1234
  containerPort: 8082

storage:
  agentHostPathRoot: "/mnt/data/starwhale"

nodeSelector:
  controller: {}

minikube:
  enabled: false
  agentHostPath: "/var/starwhale"
  gpuEnabled: false
  pv:
    storage: 100Gi
    rootPath: "/var/starwhale/local-storage"
  hostname:
    controller: console.minikube.local

resources:
  controller:
    limits:
      memory: 8G
    requests:
      memory: 6G

rbac:
  create: true
  # Specifies whether cluster-admin ClusterRole will be used for starwhale controller
  clusterAdminRole: true
  # use custom cluster role when clusterAdminRole disabled
  customClusterRole: foobar

serviceAccount:
  create: true
  annotations: {}
  name: ""
  automountServiceAccountToken: false
  customServiceAccount: foobarbaz

ingress:
  enabled: true
  ingressClassName: nginx
  host: console.pre.intra.starwhale.ai
  path: /

mirror:
  pypi:
    enabled: true
    indexUrl: "http://10.131.0.1:3141/root/pypi-douban/+simple/"
    extraIndexUrl: "https://pypi.tuna.tsinghua.edu.cn/simple/"
    trustedHost: "10.131.0.1 pypi.tuna.tsinghua.edu.cn"

devMode:
  # Automatically create PV when enabled
  createPV:
    enabled: false
    # Node selector matchExpressions in kubernetes.io/hostname
    host: ""
    # Local path for test PV
    rootPath: /var/starwhale
