image:
  registry: "ghcr.io"
  org: "star-whale"
  base:
    repo: "starwhale"
  server:
    repo: "server"

mysql:
  enabled: true
  initImage: docker.io/bitnami/bitnami-shell:11-debian-11-r6
  image: docker.io/bitnami/mysql:8.0.29-debian-10-r2
  auth:
    rootPassword: root
    username: starwhale
    password: starwhale
    database: starwhale
  ports:
    api: 3306
  persistence:
    size: 8Gi
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 500m
      memory: 250Mi

externalMySQL:
  host: localhost
  port: 3306
  username: ""
  password: ""
  database: starwhale

minio:
  enabled: true
  initImage: docker.io/bitnami/bitnami-shell:11-debian-11-r6
  image: docker.io/bitnami/minio:2022.6.20-debian-11-r0
  ports:
    api: 9000
    console: 9001
  ingress:
    enabled: true
    host: minio.pre.intra.starwhale.ai
    ingressClassName: nginx
  auth:
    rootUser: minioadmin
    rootPassword: minioadmin
  defaultBuckets: starwhale
  persistence:
    size: 50Gi
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 500m
      memory: 250Mi

externalOSS:
  host: localhost
  port: 9000
  accessKey: ""
  secretKey: ""
  defaultBuckets: starwhale
  region: "local"

controller:
  taskSplitSize: 2
  jwt:
    tokenExpireMinutes: 43200
  upload:
    maxFileSize: 20480MB
  storageType: "s3" # supported type: s3/minio/aliyun/fs
  fs:
    rootdir: /usr/local/starwhale
  persistence:
    size: 50Gi
  auth:
    username: starwhale
    password: abcd1234
  containerPort: 8082
  ingress:
    enabled: true
    ingressClassName: nginx
    host: console.pre.intra.starwhale.ai
    path: /

storage:
  agentHostPathRoot: "/mnt/data/starwhale"

nodeSelector:
  controller: {}

minikube:
  enabled: false
  pv:
    storage: 100Gi
    rootPath: "/var/starwhale/local-storage"

resources:
  controller:
    limits:
      memory: 8G
    requests:
      memory: 6G

rbac:
  create: true
  # Specifies whether cluster-admin ClusterRole will be used for starwhale controller
  clusterAdminRole: true
  # use custom cluster role when clusterAdminRole disabled
  customClusterRole: foobar

serviceAccount:
  create: true
  annotations: {}
  name: ""
  automountServiceAccountToken: false
  customServiceAccount: foobarbaz

mirror:
  pypi:
    enabled: true
    indexUrl: "https://mirrors.aliyun.com/pypi/simple/"
    extraIndexUrl: "https://pypi.tuna.tsinghua.edu.cn/simple/"
    trustedHost: "mirrors.aliyun.com pypi.tuna.tsinghua.edu.cn"

devMode:
  # Automatically create PV when enabled
  createPV:
    enabled: false
    # Node selector matchExpressions in kubernetes.io/hostname
    host: ""
    # Local path for test PV
    rootPath: /var/starwhale
