nameOverride: ""
fullnameOverride: ""
clusterDoman: cluster.local
commonLables: {}
commonAnnotations: {}

image:
  registry: docker.io
  tag: "0.1.0-nightly-2022041601"
  tasksetTag: "0.1.0-nightly-2022041601"
  pullPolicy: IfNotPresent
  pullSecrets: []

mysql:
  enabled: true
  architecture: standalone
  auth:
    rootPassword: root
    username: starwhale
    password: starwhale
    database: starwhale
  persistence:
    storageClass: local-storage-mysql
    size: 50Gi

externalMySQL:
  host: localhost
  port: 3306
  user: ""
  password: ""
  database: starwhale

minio:
  enabled: true
  mode: standalone
  auth:
    rootUser: minioadmin
    rootPassword: minioadmin
  volumePermissions:
    enabled: true
  defaultBuckets: starwhale
  persistence:
    storageClass: local-storage-minio
    size: 50Gi

externalS3OSS:
  host: localhost
  port: 9000
  accessKey: ""
  secretKey: ""

controller:
  replicaCount: 1
  updateStrategy:
    type: RollingUpdate
  podLabels: {}
  podAnnotations: {}
  containerPorts:
    controller: 8082
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  tolerations: []

storage:
  agentHostPathRoot: "/mnt/data/starwhale"

nodeSelector:
  controller: {}
  agentCPU:
    starwhale.ai/node-domain: cpu
  agentGPU:
    starwhale.ai/node-domain: gpu

minikube:
  enabled: false
  agentHostPath: "/var/starwhale"
  gpuEnabled: false
  pv:
    storage: 100Gi
    rootPath: "/var/starwhale/local-storage"
  hostname: minikube

resources:
  agentCPU:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 2000m
      memory: 1Gi
  agentGPU:
    limits:
      cpu: 2000m
      memory: 2Gi
      nvidia.com/gpu: 2
    requests:
      cpu: 1000m
      memory: 1Gi
      nvidia.com/gpu: 2
  controller:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 1Gi

serviceAccount:
  create: true
  annotations: {}
  name: ""
  automountServiceAccountToken: false

service:
  type: ClusterIP
  clusterIP: ""
  ports:
    controller: 8082
  nodePorts:
    controller: 8082
  loadBalancerIP: ""

ingress:
  enabled: false
  className: starwhale-ingress
  annotations: {}
  hosts:
    - host: starwhale.local
      paths: []
  tls: false